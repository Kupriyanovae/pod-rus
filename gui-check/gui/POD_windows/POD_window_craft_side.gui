
window = {
	name = "character_material_window"
	position = { 0 20 }
	parentanchor = center

	allow_outside = yes
	layer = top

	using = Window_Size_CharacterList
	using = Window_Background
	using = Window_Decoration_Spike

	visible = "[GetVariableSystem.Exists( 'character_material_window_open' )]"
	
	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
	}
	
	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
	}
	
	vbox = {
		using = Window_Margins

		hbox = {
			margin_bottom = -10
			layoutpolicy_horizontal = expanding

			header_pattern_interaction = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "character_material_window"
				}

				blockoverride "button_close"
				{
					onclick = "[GetVariableSystem.Toggle('character_material_window_open')]"
				}
			}
		}
		
		vbox = {
			datacontext = "[GetPlayer.MakeScope.GetVariable('character_material').GetCharacter]"
			layoutpolicy_horizontal = expanding
			margin = { 15 0 }

			hbox = {
				layoutpolicy_horizontal = expanding
				margin_right = 3

				portrait_shoulders = {}

				vbox = {
					layoutpolicy_vertical = expanding
					margin = { 10 20 }
					spacing = 2

					text_label_center = {
						text = "CHARACTER_MATERIAL_WINDOW_CURRENTLY_APPOINTED"
						default_format = "#low"
					}

					text_multi = {
						layoutpolicy_horizontal = expanding
						autoresize = yes
						text = "[Character.GetUINameNoTooltip]"
						default_format = "#high"
						using = Font_Size_Medium
						min_width = 300
						max_width = 300
					}

					hbox_skills_grid_character_model = {}

					expand = {}

					button_standard = {
						datacontext = "[GetScriptedGui( 'fire_character_material_choose' )]"

						text = "CONFIRM_FIRE_COUNCILLOR_ACCEPT"

						visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
					}
				}

				vbox = {
					layoutpolicy_vertical = expanding
					margin_bottom = 28
					visible = "[GetPlayer.MakeScope.GetVariable('character_material').IsSet]"

					expand = {}

					vbox = {
						layoutpolicy_vertical = expanding
						spacing = 10
						margin_top = 50

						background = {
							using = Background_Area
							margin = { 5 0 }
							margin_top = -40
							margin_bottom = 10
						}

						text_multi = {
							text = "CHARACTER_MATERIAL_VAMPIRE_BLOOD_LEVEL"
							autoresize = yes
							min_width = 175
							max_width = 175
						}

						text_multi = {
							text = "CHARACTER_MATERIAL_COMMON_BLOOD_LEVEL"
							autoresize = yes
							min_width = 175
							max_width = 175
						}
					}
				}
			}

			divider_light = {
				layoutpolicy_horizontal = expanding
			}
		}
		
		### Character List
		vbox = {
			name = "character_list"
			layoutpolicy_vertical = expanding
			layoutpolicy_horizontal = expanding
			spacing = 5
			
			vbox_character_list = {
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding
				blockoverride "sort_buttons" {}
				blockoverride "character_count" {}
				blockoverride "scrollbox_empty_visibility" {}

				blockoverride "container_implementation" {
					dynamicgridbox = {
						name = "characters_grid"
						datamodel = "[GetPlayer.MakeScope.GetList('character_material')]"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						ignoreinvisible = yes
						item = {
							widget = {
								size = { 100% 110 } 
								datacontext = "[Scope.GetCharacter]"
								
								hbox = {
									margin = { 0 5 }
									spacing = 15

									portrait_head_small = {}

									button_standard = {
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding

										framesize = { 252 80 }
										spriteType = Corneredtiled
										spriteborder = { 10 30 }
										texture = "gfx/interface/buttons/button_entry_characterlist.dds"

										block "button" {}

										character_list_arrow = {
											name = "character_list_arrow"
										}

										block "overlay" {
											using = default_character_list_overlay
										}
										
										block "button_content"
										{
											hbox = {
												layoutpolicy_horizontal = expanding
												layoutpolicy_vertical = expanding
												margin_top = 5

												vbox = {
													layoutpolicy_horizontal = expanding
													layoutpolicy_vertical = expanding

													# Name and age
													vbox = {
														layoutpolicy_horizontal = expanding
														layoutpolicy_vertical = expanding
														margin_left = 10

														hbox = {
															layoutpolicy_horizontal = expanding
															
															text_single = {
																layoutpolicy_horizontal = expanding
																using = Font_Size_Medium
																autoresize = no
																alwaystransparent = yes

																text = "[Character.GetUINameNoTooltip]"
															}
															
															hbox_skills_grid_character_model = {}
														}

														hbox = {
															layoutpolicy_horizontal = expanding
															layoutpolicy_vertical = expanding

															using = character_age_or_death_text
															blockoverride "list_layout" {}

															block "character_relation"
															{
																text_single = {
																	name = "character_relation"
																	layoutpolicy_horizontal = expanding
																	raw_text = "[Character.GetRelationToString( GetPlayer )]"
																	tooltip = "EXTENDED_RELATIONS_TOOLTIP"
																	default_format = "#low"
																	autoresize = no
																	align = nobaseline
																	alwaystransparent = yes
																}
															}
														}
														
													}


													### BOTTOM ROW ###
													hbox = {
														layoutpolicy_horizontal = expanding
														layoutpolicy_vertical = expanding

														vbox = {
															layoutpolicy_horizontal = expanding
															layoutpolicy_vertical = expanding
										
															text_single = {
																name = "blood"
																layoutpolicy_horizontal = expanding
																align = left|nobaseline
																margin = {16 8}

																text = "CHARACTER_MATERIAL_BLOOD_LEVEL"
															}
														}

														vbox = {
															layoutpolicy_horizontal = expanding
															layoutpolicy_vertical = expanding

															block "bottom_right_box"
															{
																hbox = {
																	layoutpolicy_horizontal = expanding
																	layoutpolicy_vertical = expanding
																	
																	margin_left = 8
																	margin_right = 4
																	spacing = 5

																	expand = {}

																	button_standard = {
																		name = "assign_position"
																		datacontext = "[GetScriptedGui( 'assign_character_material_choose' )]"

																		text = "POTENTIAL_COUNCILLOR_ASSIGN"
																		default_format = "#high"
																		
																		using = tooltip_below
																		tooltip = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('prisoner', Character.MakeScope).End)]"
																		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('prisoner', Character.MakeScope).End))]"
																		enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('prisoner', Character.MakeScope).End)]"
																		onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('prisoner', Character.MakeScope).End)]"
																	}
																}
															}
														}
													}
												}
											}
										}
									}		
								}
							}
						}
					}
				}
			}
		}
	}
}

window = {
	name = "artifact_material_window"
	position = { 0 20 }
	parentanchor = center

	allow_outside = yes
	layer = top

	using = Window_Size_CharacterList
	using = Window_Background
	using = Window_Decoration_Spike

	visible = "[GetVariableSystem.Exists( 'artifact_material_window_open' )]"
	
	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
	}
	
	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
	}
	
	vbox = {
		using = Window_Margins

		hbox = {
			margin_bottom = -10
			layoutpolicy_horizontal = expanding

			header_pattern_interaction = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "artifact_material_window"
				}

				blockoverride "button_close"
				{
					onclick = "[GetVariableSystem.Toggle('artifact_material_window_open')]"
				}
			}
		}
						
		scrollbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			blockoverride "scrollbox_margins" {
				margin = { 4 4 }
			}

			blockoverride "scrollbox_content"
			{	
				vbox = {	
					datamodel = "[GetPlayer.MakeScope.GetList('artifact_material')]"
					ignoreinvisible = yes
					spacing = 10
						
					item = {
						widget_artifact_material = { 
							datacontext = "[Scope.Artifact]" 
						}
					}
				}

				expand = {}
			}
		}
	}
}

window = {
	name = "target_artifact_window"
	position = { 0 20 }
	parentanchor = center

	allow_outside = yes
	layer = top

	using = Window_Size_CharacterList
	using = Window_Background
	using = Window_Decoration_Spike

	visible = "[GetVariableSystem.Exists( 'target_artifact_window_open' )]"
	
	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
	}
	
	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
	}
	
	vbox = {
		using = Window_Margins

		hbox = {
			margin_bottom = -10
			layoutpolicy_horizontal = expanding

			header_pattern_interaction = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "target_artifact_window"
				}

				blockoverride "button_close"
				{
					onclick = "[GetVariableSystem.Toggle('target_artifact_window_open')]"
				}
			}
		}
						
		scrollbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			blockoverride "scrollbox_margins" {
				margin = { 4 4 }
			}

			blockoverride "scrollbox_content"
			{	
				vbox = {	
					datamodel = "[GetPlayer.MakeScope.GetList('target_artifact')]"
					ignoreinvisible = yes
					spacing = 10
						
					item = {
						widget_target_artifact = { 
							datacontext = "[Scope.Artifact]" 
						}
					}
				}

				expand = {}
			}
		}
	}
}
