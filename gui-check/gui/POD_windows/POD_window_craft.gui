window = {
	name = "pod_craft_window"
	parentanchor = top|right
	layer = windows_layer
	movable = no
	
	using = Window_Size_MainTab
	
	visible = "[And(And(GetVariableSystem.HasValue('pod_sidebar', 'craft'), Not(IsRightWindowOpen)), IsSidebarVisibilityValid)]"
	
	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		using = Window_Position_MainTab

		on_start = "[GetVariableSystem.Set( 'craft_tab_choice', 'craft' )]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		using = Window_Position_MainTab_Hide
	}

	container = {
		name = "craft_window_tutorial_uses_this"
		widgetid = "craft_window_tutorial_uses_this"
	}

	margin_widget = {
		size = { 100% 100% }
		margin = { 0 26 }
		margin_right = 13

		widget = {
			size = { 100% 100% }

			vbox = {
				using = Window_Margins
				
				##### HEADER TEXT #####
				widget_header_with_picture = {
					layoutpolicy_horizontal = expanding
					minimumsize = { 0 210 }

					blockoverride "header_text" {
						text = "CRAFT"
					}

					blockoverride "size" {
						size = { 100% 228 }
					}

					blockoverride "illustration_texture" {
						texture = "gfx/interface/illustrations/window_headers/header_activity.dds"

						using = Mask_Rough_Edges

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
							blend_mode = alphamultiply
							mirror = vertical
						}
					}

					blockoverride "button_close"
					{
						onclick = "[GetVariableSystem.Clear('pod_sidebar')]"
						onclick = "[GetVariableSystem.Clear('craft_tab_choice')]"
					}
					
					vbox = {
						datacontext = "[GetPlayer.MakeScope.GetVariable('craft_creator').GetCharacter]"
						visible = "[GetPlayer.MakeScope.GetVariable('craft_creator').IsSet]"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						margin_top = 42
						margin_bottom = 10

						text_label_center = {
							text = "CRAFT_CREATOR_WINDOW_CURRENTLY_APPOINTED"
							default_format = "#low"
						}

						spacer = {
							layoutpolicy_vertical = expanding
						}

						hbox = {
							layoutpolicy_horizontal = expanding
							margin_top = -18
							margin_left = 10
							margin_right = 10
							spacing = 15

							hbox = {
								min_width = 200
								portrait_shoulders = {}
							}
							
							vbox = {
								margin_top = 10
								spacing = 5
								layoutpolicy_horizontal = expanding
								
								background = {
									using = Background_Area
									margin = { 5 0 }
									margin_top = -40
									margin_bottom = 10
								}

								text_label_left = {
									layoutpolicy_horizontal = expanding
									text = "[Character.GetUINameNoTooltip]"
									margin_left = 5
								}

								hbox_skills_grid_character_model = {
									margin_right = 85
								}
								
								text_single = {
									visible = "[Character.MakeScope.GetVariable('smith_cooldown').IsSet]"
									layoutpolicy_horizontal = expanding
									text = "smith_unavailable_tt"
									align = left
									margin_left = 5
								}
								
								text_single = {
									visible = "[Not(Character.MakeScope.GetVariable('smith_cooldown').IsSet)]"
									layoutpolicy_horizontal = expanding
									text = "smith_available_tt"
									align = left
									margin_left = 5
								}
								
								text_single = {
									visible = "[Character.MakeScope.GetVariable('forge_cooldown').IsSet]"
									layoutpolicy_horizontal = expanding
									text = "forge_unavailable_tt"
									align = left
									margin_left = 5
								}
								
								text_single = {
									visible = "[Not(Character.MakeScope.GetVariable('forge_cooldown').IsSet)]"
									layoutpolicy_horizontal = expanding
									text = "forge_available_tt"
									align = left
									margin_left = 5
								}
							}
						}
						expand = {}
					}
					expand = {}
				}
				
				hbox = {
					layoutpolicy_horizontal = expanding

					button_tab = {
						name = "craft_button"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						onclick = "[GetVariableSystem.Set('craft_tab_choice','craft')]"
						down = "[GetVariableSystem.HasValue('craft_tab_choice', 'craft')]"

						text = "CRAFT_WINDOW_TAB_CRAFT"
					}

					button_tab = {
						name = "creator_button"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						onclick = "[GetVariableSystem.Set('craft_tab_choice','creator')]"
						down = "[GetVariableSystem.HasValue('craft_tab_choice', 'creator')]"
						onclick = "[GetScriptedGui('craft_creator_initiate').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"	

						text = "CRAFT_WINDOW_TAB_CREATOR"
					}

					button_tab = {
						name = "material_button"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						onclick = "[GetVariableSystem.Set('craft_tab_choice','material')]"
						down = "[GetVariableSystem.HasValue('craft_tab_choice', 'material')]"

						text = "CRAFT_WINDOW_TAB_MATERIAL"
					}
				}
		
				### CRAFT TAB
				vbox = {
					name = "tab_craft"
					visible = "[GetVariableSystem.HasValue('craft_tab_choice', 'craft')]"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					using = Animation_Tab_Switch
					
					background = {
						name = "triangle_background"
						texture = "gfx/interface/illustrations/event_scenes/armory.dds"
						fittype = end
						alpha = 0.4
						framesize = { 1200 848 }

						using = Mask_Rough_Edges

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
							blend_mode = alphamultiply
							mirror = vertical
						}
					}

					container = {
						name = "craft_craft_view_tutorial_uses_this"
						widgetid = "craft_craft_view_tutorial_uses_this"
					}
					
					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_margins" {
							margin = { 4 4 }
						}

						blockoverride "scrollbox_content"
						{
							vbox = {
								spacing = 10
								margin = { 8 8 }

								button_craft = {
									name = "tab_craft_alchemy"
									datacontext = "[GetScriptedGui( 'alchemy_initiate' )]"
									blockoverride "title" { text = "craft_alchemy" }
									blockoverride "texture" { texture = "gfx/interface/illustrations/decisions/decision_smith.dds" }
									onclick = "[GetVariableSystem.Set('pod_craft_view', 'alchemy')]"
								}

								button_craft = {
									name = "tab_craft_smith"
									datacontext = "[GetScriptedGui( 'smith_initiate' )]"
									blockoverride "title" { text = "craft_smith" }
									blockoverride "texture" { texture = "gfx/interface/illustrations/decisions/decision_smith.dds" }
									onclick = "[GetVariableSystem.Set('pod_craft_view', 'smith')]"
								}

								button_craft = {
									name = "tab_craft_forge"
									datacontext = "[GetScriptedGui( 'forge_initiate' )]"
									blockoverride "title" { text = "craft_forge" }
									blockoverride "texture" { texture = "gfx/interface/illustrations/decisions/decision_smith.dds" }
									onclick = "[GetVariableSystem.Set('pod_craft_view', 'forge')]"
								}

								button_craft = {
									name = "tab_craft_enhance"
									datacontext = "[GetScriptedGui( 'enhance_initiate' )]"
									blockoverride "title" { text = "craft_enhance" }
									blockoverride "texture" { texture = "gfx/interface/illustrations/decisions/decision_smith.dds" }
									onclick = "[GetVariableSystem.Set('pod_craft_view', 'enhance')]"
								}

								button_craft = {
									name = "tab_craft_automaton"
									datacontext = "[GetScriptedGui( 'automaton_initiate' )]"
									blockoverride "title" { text = "craft_automaton" }
									blockoverride "texture" { texture = "gfx/interface/illustrations/decisions/decision_smith.dds" }
									onclick = "[GetVariableSystem.Set('pod_craft_view', 'automaton')]"
								}
							}

							expand = {}
						}
					}
				}
				
				### CREATOR TAB
				vbox = {
					name = "tab_creators"
					visible = "[GetVariableSystem.HasValue('craft_tab_choice', 'creator')]"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					using = Animation_Tab_Switch
					
					background = {
						name = "triangle_background"
						texture = "gfx/interface/illustrations/event_scenes/armory.dds"
						fittype = end
						alpha = 0.4
						framesize = { 1200 848 }

						using = Mask_Rough_Edges

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
							blend_mode = alphamultiply
							mirror = vertical
						}
					}

					container = {
						name = "craft_creator_view_tutorial_uses_this"
						widgetid = "craft_creator_view_tutorial_uses_this"
					}
					
					scrollbox = {
						name = "craft_creator_list"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_margins" {
							margin = { 4 4 }
						}

						blockoverride "scrollbox_content"
						{	
							text_multi = {
								visible = "[IsDataModelEmpty( GetPlayer.MakeScope.GetList('craft_creator') )]"
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding

								text = "CRAFT_WINDOW_NOT_CREATOR"
								default_format = "#low;italic"
								align = center

								background = {
									using = Background_Area
								}
							}
							
							fixedgridbox = {
								layoutpolicy_horizontal = expanding
								datamodel = "[GetPlayer.MakeScope.GetList('craft_creator')]"
								addcolumn = 545
								addrow = 90
								setitemsizefromcell = yes

								item = {
									widget_crafters_item = {
										datacontext = "[Scope.GetCharacter]"
									}
								}
							}
							expand = {}
						}
					}
				}
			
				### MATERIAL TAB
				vbox = {
					name = "tab_material"
					visible = "[GetVariableSystem.HasValue('craft_tab_choice', 'material')]"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					using = Animation_Tab_Switch
					
					background = {
						name = "triangle_background"
						texture = "gfx/interface/illustrations/event_scenes/armory.dds"
						fittype = end
						alpha = 0.4
						framesize = { 1200 848 }

						using = Mask_Rough_Edges

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
							blend_mode = alphamultiply
							mirror = vertical
						}
					}

					container = {
						name = "craft_material_view_tutorial_uses_this"
						widgetid = "craft_material_view_tutorial_uses_this"
					}
					
					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_margins" {
							margin = { 4 4 }
						}

						blockoverride "scrollbox_content"
						{
							vbox = {
								spacing = 10
								margin = { 8 8 }
								ignoreinvisible = yes

								button_material = {
									blockoverride "title" { text = "material_common" }
								}
										
								dynamicgridbox = {	
									visible = "[Not(GetVariableSystem.Exists('expand_material_common'))]"
									datamodel = "[GetGlobalList('common_material_list')]"
									flipdirection = yes
									ignoreinvisible = yes
									maxhorizontalslots = 3
									datamodel_wrap = 3
										
									item = {
										container_common_material = {
											blockoverride "title" { text = "[Localize(Concatenate('material_', Scope.GetFlagName))]" }
											blockoverride "cost" { text = "[Localize(Concatenate('material_cost_', Scope.GetFlagName))]" }
										}
									}
								}

								button_material = {
									blockoverride "title" { text = "material_uncommon" }
									blockoverride "expand" { onclick = "[GetVariableSystem.Toggle( 'expand_material_uncommon' )]" }
									blockoverride "open" { visible = "[Not( GetVariableSystem.Exists( 'expand_material_uncommon' ) )]" }
									blockoverride "close" { visible = "[GetVariableSystem.Exists( 'expand_material_uncommon' )]" }
								}
									
								dynamicgridbox = {	
									visible = "[Not(GetVariableSystem.Exists('expand_material_uncommon'))]"
									datamodel = "[GetGlobalList('uncommon_material_list')]"
									flipdirection = yes
									ignoreinvisible = yes
									maxhorizontalslots = 2
									datamodel_wrap = 2
										
									item = {
										container_uncommon_material = {
											blockoverride "title" { text = "[Localize(Concatenate('material_', Scope.GetFlagName))]" }
											blockoverride "reserve" { text = "[Localize(Concatenate('material_reserve_', Scope.GetFlagName))]" }
											blockoverride "cost" { text = "[Localize(Concatenate('material_cost_', Scope.GetFlagName))]" }
										}
									}
								}

								button_material = {
									blockoverride "title" { text = "material_rare" }
									blockoverride "expand" { onclick = "[GetVariableSystem.Toggle( 'expand_material_rare' )]" }
									blockoverride "open" { visible = "[Not( GetVariableSystem.Exists( 'expand_material_rare' ) )]" }
									blockoverride "close" { visible = "[GetVariableSystem.Exists( 'expand_material_rare' )]" }
								}
									
								dynamicgridbox = {	
									visible = "[Not(GetVariableSystem.Exists('expand_material_rare'))]"
									datamodel = "[GetGlobalList('rare_material_list')]"
									flipdirection = yes
									ignoreinvisible = yes
									maxhorizontalslots = 2
									datamodel_wrap = 2
										
									item = {
										container_uncommon_material = {
											blockoverride "title" { text = "[Localize(Concatenate('material_', Scope.GetFlagName))]" }
											blockoverride "reserve" { text = "[Localize(Concatenate('material_reserve_', Scope.GetFlagName))]" }
											blockoverride "cost" { text = "[Localize(Concatenate('material_cost_', Scope.GetFlagName))]" }
										}
									}
								}

								button_material = {
									blockoverride "title" { text = "material_special" }
									blockoverride "expand" { onclick = "[GetVariableSystem.Toggle( 'expand_material_special' )]" }
									blockoverride "open" { visible = "[Not( GetVariableSystem.Exists( 'expand_material_special' ) )]" }
									blockoverride "close" { visible = "[GetVariableSystem.Exists( 'expand_material_special' )]" }
								}
									
								dynamicgridbox = {	
									visible = "[Not(GetVariableSystem.Exists('expand_material_special'))]"
									datamodel = "[GetGlobalList('special_material_list')]"
									flipdirection = yes
									ignoreinvisible = yes
									maxhorizontalslots = 2
									datamodel_wrap = 2
										
									item = {
										container_special_material = {
											blockoverride "title" { text = "[Localize(Concatenate('material_', Scope.GetFlagName))]" }
											blockoverride "reserve" { text = "[Localize(Concatenate('material_reserve_', Scope.GetFlagName))]" }
										}
									}
								}
							}

							expand = {}
						}
					}
				}
			}
		}
	}

}
	
types Crafts
{
	type button_craft = button_standard {
		size = { 540 55 }
		layoutpolicy_horizontal = expanding

		tooltip = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
		enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
		onclick = "[GetScriptedGui('craft_clear').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
		onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

		widget = {
			scissor = yes
			parentanchor = right|top

			block "size_illustration" {
				size = { 250 53 }
			}

			icon = {
				name = "illustration"
				parentanchor = right|top
				size = { 250 100 }

				mirror = horizontal
				block "texture" { text = "" }
				alpha = 0.7

				using = Mask_Rough_Edges

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
					blend_mode = alphamultiply
				}
			}
		}

 		hbox = {
 			margin = { 20 0 }
 			margin_right = 10

 			text_single = {
 				layoutpolicy_horizontal = growing
 				name = "title"
				block "title" { text = "" }
 				visible = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
 				default_format = "#clickable"
 				align = nobaseline
 			}

 			text_single = {
 				layoutpolicy_horizontal = growing
 				name = "title2"
 				block "title" { text = "" }
 				visible = "[Not(ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
 				block "default_format" {
 					default_format = "#low"
 				}
 				align = nobaseline
 			}

 			highlight_icon = {
 				size = { 30 30 }
 				name = "not_possible"
 				texture = "gfx/interface/icons/symbols/icon_cross.dds"
 				visible = "[Not(ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
 			}
 		}
	}
	
	type button_material = button_standard_hover {
        texture = "gfx/interface/buttons/button_standard.dds"
 		size = { 540 25 }

		block "expand" { onclick = "[GetVariableSystem.Toggle( 'expand_material_common' )]" }

 		hbox = {
 			margin = { 5 0 }
 			margin_right = 5

 			text_single = {
 				name = "title"
 				layoutpolicy_horizontal = growing
				block "title" { text = "" }
 				default_format = "#clickable"
 				align = nobaseline
 			}

 			button_icon_custom = {
				block "close" { visible = "[GetVariableSystem.Exists( 'expand_material_common' )]" }
				texture = "gfx/interface/icons/flat_icons/button_expand_arrow.dds"
				alwaystransparent = yes
				size = { 20 20 }
 			}

 			button_icon_custom = {
				block "open" { visible = "[Not( GetVariableSystem.Exists( 'expand_material_common' ) )]" }
				texture = "gfx/interface/icons/flat_icons/button_expand_arrow.dds"
				alwaystransparent = yes
				mirror = vertical
				size = { 20 20 }
 			}
 		}
	}
	
	type container_common_material = widget {
		size = { 180 25 }

		hbox = {
			margin = { 5 0 }
			margin_right = 5
			text_single = {
				layoutpolicy_horizontal = growing
				block "title" { text = "" }
				default_format = "#weak"
				align = left|nobaseline
			}
			
			text_single = {
				block "cost" { text = "" }
				default_format = "#V"
				align = right|nobaseline
			}
		}
	}
	
	type container_uncommon_material = widget {
		size = { 270 25 }

		hbox = {
			margin = { 5 0 }
			margin_right = 5
			text_single = {
				block "title" { text = "" }
				default_format = "#weak"
				align = left|nobaseline
			}
			
			spacer = { size = { 5 0 } }
			
			text_single = {
				block "reserve" { text = "" }
				align = left|nobaseline
			}
			
			text_single = {
				layoutpolicy_horizontal = growing
				block "cost" { text = "" }
				default_format = "#V"
				align = right|nobaseline
			}
		}
	}
	
	type container_special_material = widget {
		size = { 270 25 }

		hbox = {
			margin = { 5 0 }
			margin_right = 5
			text_single = {
				block "title" { text = "" }
				default_format = "#weak"
				align = left|nobaseline
			}
			
			spacer = { size = { 5 0 } }
			
			text_single = {
				block "reserve" { text = "" }
				align = left|nobaseline
			}
			
			expand = {  }
		}
	}
	
	type button_alchemy_craft = button_standard {
 		size = { 270 30 }

		tooltip = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('recipe', MakeScopeFlag(Scope.GetFlagName)).End)]"
		visible = "[And( ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('recipe', MakeScopeFlag(Scope.GetFlagName)).End), Or( GetVariableSystem.Exists('show_unknown_crafts'), ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('recipe', MakeScopeFlag(Scope.GetFlagName)).End) ) )]"
		enabled = "[And(ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('recipe', MakeScopeFlag(Scope.GetFlagName)).End) , Not(EqualTo_string(GetPlayer.MakeScope.GetVariable('current_recipe').GetFlagName, Scope.GetFlagName)))]"
		onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('recipe', MakeScopeFlag(Scope.GetFlagName)).End)]"

 		hbox = {
 			margin = { 5 0 }

 			text_single = {
 				layoutpolicy_horizontal = growing
 				name = "title"
				block "title" { text = "" }
 				visible = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('recipe', MakeScopeFlag(Scope.GetFlagName)).End)]"
 				default_format = "#clickable"
 				align = nobaseline
				alwaystransparent = yes
 			}

 			text_single = {
 				layoutpolicy_horizontal = growing
 				name = "title2"
 				block "title" { text = "" }
 				visible = "[Not(ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('recipe', MakeScopeFlag(Scope.GetFlagName)).End))]"
 				block "default_format" {
 					default_format = "#low"
 				}
 				align = nobaseline
 			}

 			highlight_icon = {
 				size = { 30 30 }
 				name = "not_possible"
 				texture = "gfx/interface/icons/symbols/icon_cross.dds"
 				visible = "[Not(ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('recipe', MakeScopeFlag(Scope.GetFlagName)).End))]"
 			}
 		}
	}
	
	type container_ingredient = widget {
		size = { 340 25 }

		hbox = {
			margin = { 10 0 }
			margin_right = 10
				
			text_single = {
				minimumsize = { 145 0 }
				maximumsize = { 145 0 }
				block "title" { text = "" }
				default_format = "#italic"
				align = left|nobaseline
			}
				
			text_single = {
				layoutpolicy_horizontal = growing
				block "amount" { text = "" }
				default_format = "#V"
				align = left|nobaseline
			}
			
			text_single = {
				minimumsize = { 145 0 }
				block "cost" { text = "" }
				default_format = "#N"
				align = right|nobaseline
			}
		}
	}
	
	type container_alt_ingredient = widget {
		size = { 340 25 }

		hbox = {
			margin = { 10 0 }
			margin_right = 10
				
			text_single = {
				layoutpolicy_horizontal = growing
				block "title" { text = "" }
				default_format = "#italic"
				align = left|nobaseline
			}
			
			button_change = { 
				datacontext = "[GetScriptedGui( 'ingredient_alt' )]"

				onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('ingredient', MakeScopeFlag(Scope.GetFlagName)).End)]"
			}
		}
	}
	
	type container_method = widget {
		size = { 340 30 }

		hbox = {
			margin = { 10 0 }
			margin_right = 10
				
			text_single = {
				layoutpolicy_horizontal = growing
				block "title" { text = "" }
				default_format = "#italic"
				align = left|nobaseline
			}
			
			button_radio_label = {
				datacontext = "[GetScriptedGui( 'method_alt' )]"
				tooltip = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('method', MakeScopeFlag(Scope.GetFlagName)).End)]"
				visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('method', MakeScopeFlag(Scope.GetFlagName)).End)]"
				enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('method', MakeScopeFlag(Scope.GetFlagName)).End)]"
				onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('method', MakeScopeFlag(Scope.GetFlagName)).End)]"
				
				blockoverride "text"
				{
				}
				blockoverride "radio"
				{
					frame = "[BoolTo1And2( EqualTo_string(GetPlayer.MakeScope.GetVariable('current_method').GetFlagName, Scope.GetFlagName) )]"
				}
			}
		}
	}
	
	type container_recipe = widget {
		size = { 340 30 }

		visible = "[Or( GetVariableSystem.Exists('show_unknown_crafts'), ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('recipe', MakeScopeFlag(Scope.GetFlagName)).End) )]"

		hbox = {
			margin = { 10 0 }
			margin_right = 10
				
			text_single = {
				layoutpolicy_horizontal = growing
				block "title" { text = "" }
				default_format = "#italic"
				align = left|nobaseline
			}
			
			button_radio_label = {
				tooltip = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('recipe', MakeScopeFlag(Scope.GetFlagName)).End)]"
				visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('recipe', MakeScopeFlag(Scope.GetFlagName)).End)]"
				enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('recipe', MakeScopeFlag(Scope.GetFlagName)).End)]"
				onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('recipe', MakeScopeFlag(Scope.GetFlagName)).End)]"
				
				blockoverride "text"
				{
				}
				blockoverride "radio"
				{
					frame = "[BoolTo1And2( EqualTo_string(GetPlayer.MakeScope.GetVariable('current_recipe').GetFlagName, Scope.GetFlagName) )]"
				}
			}
		}
	}
	
	type window_character_material = window {
        size = { 180 160 }
		block "position" { position = { 685 560 } }
        layer = middle
		movable = no

		using = Window_Background
		using = Window_Decoration
		allow_outside = yes
		
		visible = "[GetScriptedGui('character_material_initiate').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

		state = {
			name = _show
			using = Animation_FadeIn_Standard
			using = Sound_WindowShow_Standard
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Standard
			using = Sound_WindowHide_Standard
		}
					
		vbox = {
			datacontext = "[GetPlayer.MakeScope.GetVariable('character_material').GetCharacter]"
			
			margin_top = 20
			margin_bottom = 20
			
			text_label_center = {
				text = "CHARACTER_MATERIAL"
			}
		
			portrait_head_small = {
				blockoverride "portrait_button"
				{
					onclick = "[GetVariableSystem.Toggle('character_material_window_open')]"
					onclick = "[GetScriptedGui('character_material_initiate').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"	
				}
				blockoverride "onclick"
				{
					button_icon = {
						parentanchor = center
						alwaystransparent = yes
						size = { 20 20 }
						position = {-5 -5}
						texture = "gfx/interface/icons/flat_icons/plus.dds"
					}
				}
			}
		}
	}
	
	type window_artifact_material = window {
        size = { 180 160 }
		block "position" { position = { 685 560 } }
        layer = middle
		movable = no

		using = Window_Background
		using = Window_Decoration
		allow_outside = yes
		
		visible = "[GetScriptedGui('artifact_material_initiate').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

		state = {
			name = _show
			using = Animation_FadeIn_Standard
			using = Sound_WindowShow_Standard
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Standard
			using = Sound_WindowHide_Standard
		}
					
		vbox = {
			datacontext = "[GetPlayer.MakeScope.GetVariable('artifact_material').Artifact]"
			
			margin_top = 20
			margin_bottom = 20
			
			text_label_center = {
				text = "ARTIFACT_MATERIAL"
			}
			
			widget = {
				size = { 85 90 }

				background = {
					using = Background_Area_Solid

					modify_texture = {
						texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
						blend_mode = alphamultiply
						alpha = 0.2
						mirror = vertical
					}
				}

				widget = {
					size = { 135 125 }
					position = {-25 -18}
					using = Window_Background_NoDecoration
				}
				
				button_artifact = {
					visible = "[GetPlayer.MakeScope.GetVariable('artifact_material').IsSet]"
					parentanchor = center
					size = { 100 100 }

					blockoverride "on_click"
					{
						onclick = "[GetVariableSystem.Toggle('artifact_material_window_open')]"
						onclick = "[GetScriptedGui('artifact_material_initiate').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"	
					}
				}

				button_icon = {
					visible = "[Not(GetPlayer.MakeScope.GetVariable('artifact_material').IsSet)]"
					parentanchor = center
					size = { 60 60 }
					texture = "gfx/interface/icons/flat_icons/plus.dds"
					
					onclick = "[GetVariableSystem.Toggle('artifact_material_window_open')]"
					onclick = "[GetScriptedGui('artifact_material_initiate').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"	
				}
			}
		}
	}
	
	type widget_artifact_material = widget {
		datacontext = "[Scope.Artifact]"
		datacontext = "[GetIllustration( 'artifact_regional_pattern' )]"
		size = { 560 110 }
		using = tooltip_above

		button_standard = {
			size = { 92% 100% }

			framesize = { 252 80 }
			spriteType = Corneredtiled
			spriteborder = { 10 10 }

			icon =  {
				texture = "[Illustration.GetTexture( Artifact.GetCulture.MakeScope )]"
				spriteType = Corneredtiled
				size = { 100% 15% }
				color = "[Artifact.GetRarityColor]"
				alpha = 0.2
				alwaystransparent = yes
			}

			icon =  {
				texture = "[Illustration.GetTexture( Artifact.GetCulture.MakeScope )]"
				spriteType = Corneredtiled
				size = { 100% 15% }
				color = "[Artifact.GetRarityColor]"
				alpha = 0.2
				alwaystransparent = yes
				parentanchor = bottom
			}

			block "button"
			{
				onclick = "[GetScriptedGui( 'assign_artifact_material_choose' ).Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('artifact', Artifact.MakeScope).End)]"
				clicksound = "event:/DLC/EP1/SFX/UI/inventory_artifact_place"
			}

			block "overlay"
			{
				using = default_character_list_overlay
			}

			block "background_button_overrides"
			{
				down = "[ObjectsEqual( Artifact.Self , GetPlayer.MakeScope.GetVariable('artifact_material').Artifact )]"
			}

			tooltipwidget = {
				artifact_tooltip = {}
			}

			using = tooltip_es
		}

		flowcontainer = {
			name = "equip_status"
			visible = "[ObjectsEqual( Artifact.Self , GetPlayer.MakeScope.GetVariable('artifact_material').Artifact )]"
			parentanchor = top|right
			widgetanchor = top|right
			position = { -52 18 }

			allow_outside = yes

			text_single = {
				text = "ARTIFACT_MATERIAL_WINDOW_CURRENTLY_APPOINTED"
				align = right|nobaseline
				default_format = "#weak"
			}
		}

		hbox = {
			layoutpolicy_horizontal = expanding

			vbox = {
				name = "icon"
				layoutpolicy_vertical = expanding
				margin = { 2 2 }

				icon_artifact = {
					blockoverride "tooltipwidget" {}
				}
			}

			vbox = {
				name = "text"
				layoutpolicy_vertical = expanding
				margin_top = 4
				margin_bottom = 10

				expand = {}

				text_single = {
					layoutpolicy_horizontal = expanding
					text = "[Artifact.GetRarityAndSlotType]"
					max_width = 300
					using = Font_Size_Small
				}

				text_multi = {
					layoutpolicy_horizontal = expanding
					text = "[Artifact.GetNameNoTooltip]"
					autoresize = yes
					max_width = 350
					using = Font_Size_Medium
					default_format = "#high"
					alwaystransparent = yes
				}

				spacer = {
					size = { 0 6 }
				}

				hbox_artifact_durability = {
					layoutpolicy_horizontal = expanding
					# simple tooltip override so that the durability tooltip doesnt show up here
					tooltip = ""
				}

				expand = {}
			}

			expand = {}
		}
	}
	
	type widget_target_artifact = widget {
		datacontext = "[Scope.Artifact]"
		datacontext = "[GetIllustration( 'artifact_regional_pattern' )]"
		size = { 560 110 }
		using = tooltip_above

		button_standard = {
			size = { 92% 100% }

			framesize = { 252 80 }
			spriteType = Corneredtiled
			spriteborder = { 10 10 }

			icon =  {
				texture = "[Illustration.GetTexture( Artifact.GetCulture.MakeScope )]"
				spriteType = Corneredtiled
				size = { 100% 15% }
				color = "[Artifact.GetRarityColor]"
				alpha = 0.2
				alwaystransparent = yes
			}

			icon =  {
				texture = "[Illustration.GetTexture( Artifact.GetCulture.MakeScope )]"
				spriteType = Corneredtiled
				size = { 100% 15% }
				color = "[Artifact.GetRarityColor]"
				alpha = 0.2
				alwaystransparent = yes
				parentanchor = bottom
			}

			block "button"
			{
				onclick = "[GetScriptedGui( 'assign_target_artifact_choose' ).Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('artifact', Artifact.MakeScope).End)]"
				clicksound = "event:/DLC/EP1/SFX/UI/inventory_artifact_place"
			}

			block "overlay"
			{
				using = default_character_list_overlay
			}

			block "background_button_overrides"
			{
				down = "[ObjectsEqual( Artifact.Self , GetPlayer.MakeScope.GetVariable('target_artifact').Artifact )]"
			}

			tooltipwidget = {
				artifact_tooltip = {}
			}

			using = tooltip_es
		}

		flowcontainer = {
			name = "equip_status"
			visible = "[ObjectsEqual( Artifact.Self , GetPlayer.MakeScope.GetVariable('target_artifact').Artifact )]"
			parentanchor = top|right
			widgetanchor = top|right
			position = { -52 18 }

			allow_outside = yes

			text_single = {
				text = "TARGET_ARTIFACT_WINDOW_CURRENTLY_APPOINTED"
				align = right|nobaseline
				default_format = "#weak"
			}
		}

		hbox = {
			layoutpolicy_horizontal = expanding

			vbox = {
				name = "icon"
				layoutpolicy_vertical = expanding
				margin = { 2 2 }

				icon_artifact = {
					blockoverride "tooltipwidget" {}
				}
			}

			vbox = {
				name = "text"
				layoutpolicy_vertical = expanding
				margin_top = 4
				margin_bottom = 10

				expand = {}

				text_single = {
					layoutpolicy_horizontal = expanding
					text = "[Artifact.GetRarityAndSlotType]"
					max_width = 300
					using = Font_Size_Small
				}

				text_multi = {
					layoutpolicy_horizontal = expanding
					text = "[Artifact.GetNameNoTooltip]"
					autoresize = yes
					max_width = 350
					using = Font_Size_Medium
					default_format = "#high"
					alwaystransparent = yes
				}

				spacer = {
					size = { 0 6 }
				}

				hbox_artifact_durability = {
					layoutpolicy_horizontal = expanding
					# simple tooltip override so that the durability tooltip doesnt show up here
					tooltip = ""
				}

				expand = {}
			}

			expand = {}
		}
	}
	
	type widget_crafters_item = widget {
		size = { 200 180 }

		vbox = {
			background = {
				using = Background_Area_With_Header
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				spacing = 5

				portrait_head_small = {}

				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					margin_right = 10

					hbox = {
						layoutpolicy_horizontal = expanding
						margin_top = 4

						text_single = {
							layoutpolicy_horizontal = expanding
							text = "[Character.GetUINameNoTooltip]"
							using = Font_Size_Medium
							autoresize = no
							fontsize_min = 13
							align = nobaseline
							max_width = 280
						}

						expand = {}

						hbox_skills_grid_character_model = {}
					}

					hbox = {
						layoutpolicy_horizontal = expanding

						vbox = {
							layoutpolicy_horizontal = expanding

							margin_top = 3

							hbox = {
								layoutpolicy_horizontal = expanding

								text_single = {
									name = "character_relation"
									layoutpolicy_horizontal = expanding
									text = "[Character.GetRelationToString(GetPlayer)]"
									tooltip = "EXTENDED_RELATIONS_TOOLTIP"
									default_format = "#low"
									autoresize = no
									fontsize_min = 13
									align = nobaseline
									max_width = 350
								}

								expand = {}
							}

							vbox = {
								name = "info_text"
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding

								text_single = {
									layoutpolicy_horizontal = expanding
									text = "CRAFT_CREATOR_KNOWN_RECIPE"
									align = nobaseline
								}

								expand = {}
							}
						}

						vbox = {
							layoutpolicy_vertical = expanding
							margin_left = 10
					
							button_standard = {
								name = "assign_position"
								datacontext = "[GetScriptedGui( 'assign_craft_creator_choose' )]"

								text = "POTENTIAL_COUNCILLOR_ASSIGN"
								default_format = "#high"
								
								using = tooltip_below
								tooltip = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('courtier', Character.MakeScope).End)]"
								visible = "[And(ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('courtier', Character.MakeScope).End), Not(Character.IsGuest))]"
								enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('courtier', Character.MakeScope).End)]"
								onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('courtier', Character.MakeScope).End)]"
							}

							button_standard = {
								name = "swap_position"
								datacontext = "[GetScriptedGui( 'swap_craft_creator_choose' )]"

								text = "POTENTIAL_COUNCILLOR_SWAP"
								default_format = "#high"
								
								using = tooltip_below
								tooltip = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								visible = "[And(ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('courtier', Character.MakeScope).End), Not(Character.IsGuest))]"
								enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('courtier', Character.MakeScope).End)]"
								onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('courtier', Character.MakeScope).End)]"
							}

							button_standard = {
								name = "recruit_guest"
								visible = "[And(Character.IsPlayerInteractionShown('recruit_guest_interaction'), Character.IsGuest)]"
								onclick = "[Character.OpenPlayerInteraction('recruit_guest_interaction')]"
								enabled = "[Character.IsPlayerInteractionValid('recruit_guest_interaction')]"

								text = "[Character.GetPlayerInteractionName('recruit_guest_interaction')]"

								tooltip = "[Character.GetPlayerInteractionTooltip('recruit_guest_interaction')]"
								using = tooltip_below
							}
						}
					}
					expand = {}
				}
			}
			expand = {}
		}
	}

	type window_target_artifact = window {
        size = { 180 160 }
        position = { 735 0 }
        layer = middle
		movable = no

		using = Window_Background
		using = Window_Decoration
		allow_outside = yes
		
		visible = "[And(GetVariableSystem.HasValue('pod_craft_view', 'enhance'),IsInGame)]"

		state = {
			name = _show
			using = Animation_FadeIn_Standard
			using = Sound_WindowShow_Standard
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Standard
			using = Sound_WindowHide_Standard
		}
					
		vbox = {
			datacontext = "[GetPlayer.MakeScope.GetVariable('target_artifact').Artifact]"
			
			margin_top = 20
			margin_bottom = 20
			
			text_label_center = {
				text = "TARGET_ARTIFACT"
			}
			
			widget = {
				size = { 85 90 }

				background = {
					using = Background_Area_Solid

					modify_texture = {
						texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
						blend_mode = alphamultiply
						alpha = 0.2
						mirror = vertical
					}
				}

				widget = {
					size = { 135 125 }
					position = {-25 -18}
					using = Window_Background_NoDecoration
				}
				
				button_artifact = {
					visible = "[GetPlayer.MakeScope.GetVariable('target_artifact').IsSet]"
					parentanchor = center
					size = { 100 100 }

					blockoverride "on_click"
					{
						onclick = "[GetVariableSystem.Toggle('target_artifact_window_open')]"
						onclick = "[GetScriptedGui('target_artifact_initiate').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"	
					}
				}

				button_icon = {
					visible = "[Not(GetPlayer.MakeScope.GetVariable('target_artifact').IsSet)]"
					parentanchor = center
					size = { 60 60 }
					texture = "gfx/interface/icons/flat_icons/plus.dds"
					
					onclick = "[GetVariableSystem.Toggle('target_artifact_window_open')]"
					onclick = "[GetScriptedGui('target_artifact_initiate').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"	
				}
			}
		}
	}
	
}