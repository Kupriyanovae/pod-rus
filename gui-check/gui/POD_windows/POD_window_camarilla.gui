window = {
	name = "camarilla_view"
	datacontext = "[GetVariableSystem]"
	datacontext = "[GetPlayer]"
	parentanchor = top|right
	allow_outside = yes
	movable = no
	layer = windows_layer
	
	visible = "[And(And(GetVariableSystem.HasValue('pod_sidebar', 'camarilla'), Not(IsRightWindowOpen)), IsSidebarVisibilityValid)]"
	datacontext = "[GetFaithByKey( 'camahumanity' )]"

	using = Window_Size_MainTab

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		using = Window_Position_MainTab

		on_start = "[GetVariableSystem.Set('camarilla_tab_choice','justicars')]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		using = Window_Position_MainTab_Hide
	}

	margin_widget = {
		size = { 100% 100% }
		margin = { 0 26 }
		margin_right = 13

		widget = {
			size = { 100% 100% }

			### WINDOW CONTENT
			vbox = {
				using = Window_Margins
				ignoreinvisible = yes

				##### HEADER TEXT #####
				widget_header_with_picture = {
					layoutpolicy_horizontal = expanding
					minimumsize = { 0 180 }
					visible = "[Not(GreaterThan_int32( GetDataModelSize(Faith.MakeScope.GetList('member_clan')), '(int32)9' ))]"

					blockoverride "header_text" {
						text = "camarilla_religion"
					}

					blockoverride "size" {
						size = { 100% 198 }
					}

					blockoverride "illustration_texture" {
						texture = "gfx/interface/illustrations/window_headers/header_sects.dds"

						using = Mask_Rough_Edges

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
							blend_mode = alphamultiply
							mirror = vertical
						}
					}

					blockoverride "button_close"
					{
						onclick = "[GetVariableSystem.Clear('pod_sidebar')]"
						onclick = "[GetVariableSystem.Clear('camarilla_tab_choice')]"
					}

					vbox = {
						margin_top = 42
						margin_bottom = 10

						hbox = {
							spacing = 20

							text_single = {
								text = "CAMARILLA_WINDOW_MY_STATUS"
							}

							text_single = {
								text = "CAMARILLA_WINDOW_CLAN_STATUS"
							}
						}

						hbox = {
							layoutpolicy_horizontal = expanding
							margin_top = 12
							margin_left = 10
							margin_right = 10
							spacing = 15
							
							vbox = {
								layoutpolicy_vertical = expanding
								ignoreinvisible = yes
								spacing = 3

								text_label_center = {
									text = "CAMARILLA_WINDOW_MEMBER_CLAN"
								}

								hbox = {
									datamodel = "[Faith.MakeScope.GetList('member_clan')]"

									background = {
										texture = "gfx/lines/line_lifestyles_unavailable.dds"
										margin = { -8 -12 }
										tintcolor = { 0.7 0.5 0.25 1 }
									}
									
									item = {
										icon_button_decorative = {
											size = { 60 60 }
											datacontext = "[Scope.FaithDoctrine]"
											tooltip = "FAITH_WINDOW_DOCTRINE_TOOLTIP_WITH_FAITH"
											using = tooltip_below

											icon_button_decorative = {
												size = { 54 54 }
												parentanchor = center
												alwaystransparent = yes
											}

											button_icon = {
												texture = "[Scope.FaithDoctrine.GetGroup.GetIcon]"
												parentanchor = center
												size = { 36 36 }
												alwaystransparent = yes

												# using = Master_Button_Modify_Texture

												# blockoverride "master_color_frame" {
													# frame = 1
												# }
											}
										}
									}
								}
							}
						}

						expand = {}
					}

					widget = {
						allow_outside = yes
						size = { 89 98 }

						sect_symbol_big = {
							parentanchor = top|hcenter
							position = { 5 5 }
							blockoverride "symbol" { texture = "gfx/interface/icons/Symbol_Sect_Cam.dds" }
						}
					}
				}
			
				##### HEADER TEXT 2 #####
				widget_header_with_picture = {
					layoutpolicy_horizontal = expanding
					minimumsize = { 0 210 }
					visible = "[GreaterThan_int32( GetDataModelSize(Faith.MakeScope.GetList('member_clan')), '(int32)9' )]"

					blockoverride "header_text" {
						text = "camarilla_religion"
					}

					blockoverride "size" {
						size = { 100% 228 }
					}

					blockoverride "illustration_texture" {
						texture = "gfx/interface/illustrations/window_headers/header_sects.dds"

						using = Mask_Rough_Edges

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
							blend_mode = alphamultiply
							mirror = vertical
						}
					}

					blockoverride "button_close"
					{
						onclick = "[GetVariableSystem.Clear('pod_sidebar')]"
						onclick = "[GetVariableSystem.Clear('camarilla_tab_choice')]"
					}

					vbox = {
						margin_top = 42
						margin_bottom = 10

						hbox = {
							spacing = 20

							text_single = {
								text = "CAMARILLA_WINDOW_MY_STATUS"
							}

							text_single = {
								text = "CAMARILLA_WINDOW_CLAN_STATUS"
							}
						}

						hbox = {
							layoutpolicy_horizontal = expanding
							margin_top = 12
							margin_left = 10
							margin_right = 10
							spacing = 15
							
							vbox = {
								layoutpolicy_vertical = expanding
								ignoreinvisible = yes
								spacing = 3

								text_label_center = {
									text = "CAMARILLA_WINDOW_MEMBER_CLAN"
								}

								dynamicgridbox = {
									datamodel = "[Faith.MakeScope.GetList('member_clan')]"
									flipdirection = no
									datamodel_wrap = 2
									
									item = {
										icon_button_decorative = {
											size = { 50 50 }
											datacontext = "[Scope.FaithDoctrine]"
											tooltip = "FAITH_WINDOW_DOCTRINE_TOOLTIP_WITH_FAITH"
											using = tooltip_below

											icon_button_decorative = {
												size = { 44 44 }
												parentanchor = center
												alwaystransparent = yes
											}

											button_icon = {
												texture = "[Scope.FaithDoctrine.GetGroup.GetIcon]"
												parentanchor = center
												size = { 32 32 }
												alwaystransparent = yes

												# using = Master_Button_Modify_Texture

												# blockoverride "master_color_frame" {
													# frame = 1
												# }
											}
										}
									}
								}
							}
						}

						expand = {}
					}

					widget = {
						allow_outside = yes
						size = { 89 98 }

						sect_symbol_big = {
							parentanchor = top|hcenter
							position = { 5 5 }
							blockoverride "symbol" { texture = "gfx/interface/icons/Symbol_Sect_Cam.dds" }
						}
					}
				}	
				
				### Tutorial button
				button_standard = {
					layoutpolicy_horizontal = expanding
					size = { 0 60 }
					
					onclick = "[GetScriptedGui('camarilla_meeting_tutorial').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"	
					tooltip = "CAMARILLA_WINDOW_MEETING_TOOLTIP"

					hbox = {
						layoutpolicy_horizontal = expanding
						
						margin = { 15 0 }
						
						icon_flat_standard = {
							size = { 40 40 }
							texture = "gfx/interface/window_regency/scale_of_power.dds"

							blockoverride "master_color_frame" {
								frame = 1
							}
						}

						vbox = {
							margin_left = 15

							text_single = {
								layoutpolicy_horizontal = expanding
								alwaystransparent = yes
								text = "CAMARILLA_WINDOW_MEETING_REMAIN_TIME"
								align = left|nobaseline
								max_width = 480
							}

							text_single = {
								layoutpolicy_horizontal = expanding
								alwaystransparent = yes
								
								text = "CAMARILLA_WINDOW_MEETING_TOOLTIP"
								align = left|nobaseline
								max_width = 480
							}
						}

						expand = {}
					}
				}

				hbox = {
					name = "camarilla_tabs"
					layoutpolicy_horizontal = expanding

					button_tab = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						onclick = "[GetVariableSystem.Set('camarilla_tab_choice','inner_circle')]"
						down = "[GetVariableSystem.HasValue('camarilla_tab_choice', 'inner_circle')]"
						visible = "[GetScriptedGui('inner_circle_visible').IsShown(GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"

						text = "CAMARILLA_WINDOW_TAB_INNER_CIRCLE"
					}

					button_tab = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						onclick = "[GetVariableSystem.Set('camarilla_tab_choice','justicars')]"
						down = "[GetVariableSystem.HasValue('camarilla_tab_choice', 'justicars')]"

						text = "CAMARILLA_WINDOW_TAB_JUSTICARS"
					}

					button_tab = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						onclick = "[GetVariableSystem.Set('camarilla_tab_choice','red_list')]"
						down = "[GetVariableSystem.HasValue('camarilla_tab_choice', 'red_list')]"

						text = "CAMARILLA_WINDOW_TAB_RED_LIST"
					}
				}
				
				### INNER CIRCLE TAB
				vbox = {
					name = "tab_inner_circle"
					visible = "[GetVariableSystem.HasValue('camarilla_tab_choice', 'inner_circle')]"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					using = Animation_Tab_Switch
					
					background = {
						name = "triangle_background"
						texture = "gfx/interface/illustrations/event_scenes/throneroom_west.dds"
						fittype = end
						alpha = 0.4
						framesize = { 1200 848 }

						using = Mask_Rough_Edges

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
							blend_mode = alphamultiply
							mirror = vertical
						}
					}
					
					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_margins" {
							margin = { 4 4 }
						}

						blockoverride "scrollbox_content"
						{
							fixedgridbox = {
								layoutpolicy_horizontal = expanding
								datamodel = "[Faith.MakeScope.GetList('inner_circle')]"
								addcolumn = 545
								addrow = 147
								setitemsizefromcell = yes

								item = {
									widget_justicars_item = {
										datacontext = "[Scope.GetCharacter]"
									}
								}
							}
							expand = {}
						}
					}
				}
				
				### JUSTICARS TAB
				vbox = {
					name = "tab_justicars"
					visible = "[GetVariableSystem.HasValue('camarilla_tab_choice', 'justicars')]"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					using = Animation_Tab_Switch
					
					background = {
						name = "triangle_background"
						texture = "gfx/interface/illustrations/event_scenes/throneroom_west.dds"
						fittype = end
						alpha = 0.4
						framesize = { 1200 848 }

						using = Mask_Rough_Edges

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
							blend_mode = alphamultiply
							mirror = vertical
						}
					}
					
					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_margins" {
							margin = { 4 4 }
						}

						blockoverride "scrollbox_content"
						{
							fixedgridbox = {
								layoutpolicy_horizontal = expanding
								datamodel = "[Faith.MakeScope.GetList('justicars')]"
								addcolumn = 545
								addrow = 147
								setitemsizefromcell = yes

								item = {
									widget_justicars_item = {
										datacontext = "[Scope.GetCharacter]"
									}
								}
							}
							expand = {}
						}
					}
				}
				
				### RED LIST TAB
				vbox = {
					name = "tab_red_list"
					visible = "[GetVariableSystem.HasValue('camarilla_tab_choice', 'red_list')]"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					state = {
						name = _show
						using = Animation_FadeIn_Quick
					}

					state = {
						name = _hide
						alpha = 0
					}
					
					background = {
						name = "triangle_background"
						texture = "gfx/interface/illustrations/event_scenes/throneroom_west.dds"
						fittype = end
						alpha = 0.4
						framesize = { 1200 848 }

						using = Mask_Rough_Edges

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
							blend_mode = alphamultiply
							mirror = vertical
						}
					}
					
					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_margins" {
							margin = { 4 4 }
						}

						blockoverride "scrollbox_content"
						{
							fixedgridbox = {
								layoutpolicy_horizontal = expanding
								datamodel = "[Faith.MakeScope.GetList('red_list')]"
								addcolumn = 545
								addrow = 167
								setitemsizefromcell = yes

								item = {
									widget_red_list_item = {
										datacontext = "[Scope.GetCharacter]"
									}
								}
							}
							
							vbox = {
								spacing = -3

								widget = {
									layoutpolicy_horizontal = expanding
									size = { 0 35 }
									min_width = 110

									block "expand_button" {
										button_standard_hover = {
											size = { 100% 100% }

											block "expand_button_inside" {}
										}
									}

									hbox = {
										margin = { 10 0 }

										background = {
											using = Text_Label_Background
											alpha = 0.5
											margin = { 0 -2 }
										}

										text_single = {
											align = nobaseline
											fontsize = 16
											text = "trait_anathema"
										}
									}
								}

								hbox = {
									layoutpolicy_horizontal = expanding

									using = Animation_Character_Window_Refresh

									fixedgridbox = {
										flipdirection = yes
										addcolumn = 90
										addrow = 130
										datamodel_wrap = 6
										datamodel = "[Faith.MakeScope.GetList('anathema')]"

										item = {
											container = {
												datacontext = "[Scope.GetCharacter]"
												portrait_head_small = {
													blockoverride "portrait_button"
													{
														using = tooltip_ne
													}
													blockoverride "glow_visible"
													{
														visible = no
													}
												}
												text_single = {
													max_width = 90
													margin_top = 85
													raw_text = "CAMARILLA_WINDOW_ANATHEMA_MEMBER_BOUNTY"
												}
											}
										}
									}
									expand = {}
								}
								expand = {}
							}
						}
					}
				}
			}
		}
	}
}

types Camarilla
{
	type widget_justicars_item = widget {
		size = { 200 180 }

		vbox = {
			background = {
				using = Background_Area_With_Header
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				spacing = 5

				portrait_head_small = {}

				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					margin_right = 10

					hbox = {
						layoutpolicy_horizontal = expanding
						margin_top = 4

						text_single = {
							layoutpolicy_horizontal = expanding
							text = "[Character.GetUINameNoTooltip]"
							using = Font_Size_Medium
							autoresize = no
							fontsize_min = 13
							align = nobaseline
							max_width = 280
						}

						expand = {}

						hbox_skills_grid_character_model = {}
					}

					hbox = {
						layoutpolicy_horizontal = expanding

						vbox = {
							layoutpolicy_horizontal = expanding

							margin_top = 3

							hbox = {
								layoutpolicy_horizontal = expanding

								text_single = {
									name = "character_relation"
									layoutpolicy_horizontal = expanding
									text = "[Character.GetRelationToString(GetPlayer)]"
									tooltip = "EXTENDED_RELATIONS_TOOLTIP"
									default_format = "#low"
									autoresize = no
									fontsize_min = 13
									align = nobaseline
									max_width = 350
								}

								expand = {}
							}

							hbox = {
								layoutpolicy_horizontal = expanding
								spacing = 5

								container = {
									name = "traits_clan"
									datamodel = "[GetTraitGroup( 'vampclan' ).GetTraits]"
									ignoreinvisible = yes

									item = {
										flowcontainer = {
											visible = "[Character.HasTrait( Trait.Self )]"
											icon_trait = {
												blockoverride "icon_size"
												{
													size = { 30 30 }
												}

												blockoverride "tooltip_placement"
												{
													using = tooltip_se
												}

												blockoverride "glow_radius"
												{
													glow_radius = 3
												}
											}

											spacer = {
												size = { 5 0 }
											}

											text_single = {
												layoutpolicy_horizontal = expanding
												text = "CAMARILLA_WINDOW_JUSTICARS_CLAN"
											}
										}
									}
								}

								expand = {}

							}
						}

						vbox = {
							layoutpolicy_vertical = expanding
							margin_left = 10

							hbox = {
								coa_dynasty_tiny = {
									datacontext = "[Character.GetHouse.GetDynasty]"
									size = { 28 35 }
								}

								vbox = {
									margin_top = 5

									hbox = {
										visible = "[Character.PlayerHasHooksOrHookableSecrets]"
										spacer = {
											size = { 8 0 }
										}
										
										icon = {
											name = "hook"
											size = { 25 25 }
											framesize = { 40 40 }
											texture = "gfx/interface/icons/portraits/hook_secret.dds"

											frame = "[Character.GetHookOrHookableSecretsFrame]"
											tooltip = "[Character.HookTooltip]"
										}
									}
								}
							}
						}
					}
					expand = {}
				}
			}
			
			hbox = {
				layoutpolicy_horizontal = expanding
				margin = { 10 10 }
				spacing = 5

				background = {
					using = Background_Area_Dark
				}

				vbox = {
					name = "info_text"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					text_single = {
						visible = "[And( Character.IsAlive, Not( Character.IsImprisoned ) )]"
						layoutpolicy_horizontal = expanding
						text = "CHARACTER_LOCATION_TOOLTIP"
						align = nobaseline
					}

					text_single = {
						visible = "[And( Character.IsAlive, Character.IsImprisoned )]"
						layoutpolicy_horizontal = expanding
						text = "CHARACTER_IMPRISONED_TOOLTIP"
						align = nobaseline
					}

					expand = {}
				}

				hbox = {
					spacing = 3

					button_round = {
						datacontext = "[GetScriptedGui( 'justicar_lift_anathema' )]"
						enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('justicar',Character.MakeScope).End)]"
						button_icon = { 
							texture = "gfx/interface/icons/flat_icons/prison_ransom.dds" 
							parentanchor = center
							using = tooltip_se
							onclick = "[ScriptedGui.Execute(GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('justicar',Character.MakeScope).End)]"
							tooltip = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('justicar',Character.MakeScope).End)]"
						}
					}
				}
			}
			
			expand = {}
		}
	}

	type widget_red_list_item = widget {
		size = { 200 180 }

		vbox = {
			background = {
				using = Background_Area_With_Header
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				spacing = 5

				portrait_head_small = {}

				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					margin_right = 10

					hbox = {
						layoutpolicy_horizontal = expanding
						margin_top = 4

						text_single = {
							layoutpolicy_horizontal = expanding
							text = "[Character.GetUINameNoTooltip]"
							using = Font_Size_Medium
							autoresize = no
							fontsize_min = 13
							align = nobaseline
							max_width = 280
						}

						expand = {}

						hbox_skills_grid_character_model = {}
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						spacing = 5
						margin_bottom = 5

						hbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							minimumsize = { 0 60 }
							margin_left = 5

							background = {
								using = Background_Area_Dark
								margin = { 3 3 }
								alpha = 0.5
							}

							widget = {
								layoutpolicy_vertical = expanding
								size = { 45 40 }

								coa_house_small = {
									datacontext = "[Character.GetHouse]"
									parentanchor = center
									scale = 0.7
								}
							}

							vbox = {
								layoutpolicy_vertical = expanding
								margin = { 10 0 }
								minimumsize = { 290 0 }

								hbox = {
									layoutpolicy_horizontal = expanding

									text_single = {
										name = "character_relation"
										layoutpolicy_horizontal = expanding
										text = "[Character.GetRelationToString(GetPlayer)]"
										tooltip = "EXTENDED_RELATIONS_TOOLTIP"
										default_format = "#low"
										autoresize = no
										fontsize_min = 13
										align = nobaseline
									}

									expand = {}
								}

								hbox = {
									layoutpolicy_horizontal = expanding
									datacontext = "[Character.MakeScope.GetVariable('trophy_clan').Trait]"

									flowcontainer = {
										icon_trait = {
											blockoverride "icon_size"
											{
												size = { 30 30 }
											}

											blockoverride "tooltip_placement"
											{
												using = tooltip_se
											}

											blockoverride "glow_radius"
											{
												glow_radius = 3
											}
										}

										spacer = {
											size = { 5 0 }
										}

										text_single = {
											layoutpolicy_horizontal = expanding
											text = "CAMARILLA_WINDOW_RED_LIST_TROPHY_CLAN"
										}
									}

									expand = {}
								}
							}
							
							expand = {}

							divider_light = {
								layoutpolicy_vertical = expanding
								alpha = 0.5
							}

							hbox = {
								margin_right = 5

								button_religion_icon = {
									datacontext = "[Character.GetFaith]"
									size = { 40 40 }
								}

								vbox = {
									datacontext = "[Character.GetCulture]"

									tooltipwidget = {
										culture_tooltip = {}
									}
									using = tooltip_se

									icon = {
										name = "culture"
										texture = "gfx/interface/icons/icon_culture.dds"
										size = { 24 24 }
									}

									text_single = {
										layoutpolicy_horizontal = expanding
										min_width = 60
										align = center|nobaseline
										autoresize = no
										text = "CULTURE_LISTS_WINDOW"
									}
								}
							}
						}
					}
					expand = {}
				}
			}
			
			hbox = {
				layoutpolicy_horizontal = expanding
				margin = { 10 10 }
				spacing = 5

				background = {
					using = Background_Area_Dark
				}

				vbox = {
					name = "info_text"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					text_single = {
						visible = "[And( Character.IsAlive, Not( Character.IsImprisoned ) )]"
						layoutpolicy_horizontal = expanding
						text = "CHARACTER_LOCATION_TOOLTIP"
						align = nobaseline
					}

					text_single = {
						visible = "[And( Character.IsAlive, Character.IsImprisoned )]"
						layoutpolicy_horizontal = expanding
						text = "CHARACTER_IMPRISONED_TOOLTIP"
						align = nobaseline
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						spacing = 5

						icon = {
							texture = "gfx/interface/icons/icon_gold.dds"
							size = { 30 30 }
						}

						text_single = {
							layoutpolicy_horizontal = expanding
							text = "CAMARILLA_WINDOW_RED_LIST_MEMBER_BOUNTY"
							autoresize = no
						}
					}

					expand = {}
				}

				hbox = {
					spacing = 3

					button_round = {
						datacontext = "[GetScriptedGui( 'red_list_add_bounty' )]"
						enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('hunted',Character.MakeScope).End)]"
						button_icon = { 
							texture = "gfx/interface/icons/flat_icons/prison_ransom.dds" 
							parentanchor = center
							using = tooltip_se
							onclick = "[ScriptedGui.Execute(GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('hunted',Character.MakeScope).End)]"
							tooltip = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('hunted',Character.MakeScope).End)]"
						}
					}

					button_round = {
						datacontext = "[GetScriptedGui( 'red_list_blood_hunt_war' )]"
						enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('hunted',Character.MakeScope).End)]"
						button_icon = { 
							texture = "gfx/interface/icons/flat_icons/war.dds" 
							parentanchor = center
							using = tooltip_se
							onclick = "[ScriptedGui.Execute(GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('hunted',Character.MakeScope).End)]"
							tooltip = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('hunted',Character.MakeScope).End)]"
						}
					}

					button_round = {
						datacontext = "[GetScriptedGui( 'red_list_blood_hunt_duel' )]"
						enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('hunted',Character.MakeScope).End)]"
						button_icon = { 
							texture = "gfx/interface/icons/flat_icons/prison_execute.dds" 
							parentanchor = center
							onclick = "[ScriptedGui.Execute(GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('hunted',Character.MakeScope).End)]"
							tooltip = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('hunted',Character.MakeScope).End)]"
						}
					}
				}
			}
					
			expand = {}
		}
	}
}
