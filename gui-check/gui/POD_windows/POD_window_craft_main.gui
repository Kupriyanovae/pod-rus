window = {
	name = "pod_alchemy_window"
	position = { 0 0 }
	parentanchor = center
	layer = middle
	datacontext = "[GetPlayer.MakeScope.GetCharacter]"

	using = Window_Background
	using = Window_Decoration_Spike
	allow_outside = yes

	state = {
		name = _show
		using = Animation_FadeIn_Standard
		using = Sound_WindowShow_Standard
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Standard
		using = Sound_WindowHide_Standard
	}

	container = {
		name = "craft_alchemy_view_tutorial_uses_this"
		widgetid = "craft_alchemy_view_tutorial_uses_this"
	}

	visible = "[And(GetVariableSystem.HasValue('pod_craft_view', 'alchemy'),IsInGame)]"
	
	window_character_material = {}

	vbox = {
		set_parent_size_to_minimum = yes
		using = Window_Margins
		
		allow_outside = yes

		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "craft_alchemy"
			}

			blockoverride "button_close"
			{
				onclick = "[GetVariableSystem.Toggle('pod_craft_view')]"
				onclick = "[GetScriptedGui('craft_clear').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			}
		}

		widget = {
			size = { 650 625 }
			allow_outside = yes

			background = {
				texture = "gfx/interface/illustrations/event_scenes/study_physician.dds"
				fittype = centercrop
				alpha = 0.6
				margin_top = 10
				margin_left = 5
				margin_right = 5
				margin_bottom = 5
				modify_texture = {
					texture = "gfx/interface/component_masks/mask_edge_3px.dds"
					spriteType = Corneredtiled
					spriteborder = { 4 4 }
					blend_mode = alphamultiply
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
					blend_mode = alphamultiply
					mirror = vertical
				}
			}
		
			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				maximumsize = { 650 565 }
				spacing = 5
				
				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					maximumsize = { 295 565 }

					hbox = {
						layoutpolicy_horizontal = expanding
						spacer = {}
						text_label_center = {
							text = "ALCHEMY_TAB_RECIPE"
						}
						hbox = {
							spacing = 6
							text_single = {
								margin_bottom = 5
								text = "CRAFT_RECIPE_TOGGLE"
								default_format = "#low"
							}
							button_checkbox = {
								size = { 20 20 }
								checked = "[Not(GetVariableSystem.Exists('show_unknown_crafts'))]"
								onclick = "[GetVariableSystem.Toggle('show_unknown_crafts')]"
							}
						}
					}
						
					scrollbox = {
						name = "recipe_list"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_margins" {
							margin = { 4 4 }
						}

						blockoverride "scrollbox_content"
						{
							vbox = {
								spacing = 5
								margin_top = 5
								datamodel = "[GetGlobalList('alchemy_list')]"
								ignoreinvisible = yes
								
								item = {
									button_alchemy_craft = {
										datacontext = "[GetScriptedGui('alchemy_set')]"
										blockoverride "title" { text = "[Localize(Concatenate(Scope.GetFlagName, '_button_name'))]" }
									}
								}
							}

							expand = {}
						}
					}
				}
				
				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					maximumsize = { 350 565 }

					text_label_center = {
						text = "ALCHEMY_TAB_INGREDIENT"
					}
						
					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_margins" {
							margin = { 4 4 }
						}

						blockoverride "scrollbox_content"
						{
									
							vbox = {	
								datamodel = "[GetPlayer.MakeScope.GetList('ingredient_list')]"
								ignoreinvisible = yes
									
								item = {
									container_ingredient = {
										blockoverride "title" { text = "[Localize(Concatenate('material_', Scope.GetFlagName))]" }
										blockoverride "amount" { text = "[Localize(Concatenate('material_amount_', Scope.GetFlagName))]" }
										blockoverride "cost" { text = "[Localize(Concatenate('material_total_cost_', Scope.GetFlagName))]" }
									}
								}
							}

							expand = {}
						}
					}

					text_label_center = {
						text = "ALCHEMY_TAB_ALT_INGREDIENT"
					}
						
					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_margins" {
							margin = { 4 4 }
						}

						blockoverride "scrollbox_content"
						{
									
							vbox = {	
								datamodel = "[GetPlayer.MakeScope.GetList('alt_ingredient_list')]"
								ignoreinvisible = yes
									
								item = {
									container_alt_ingredient = {
										blockoverride "title" { text = "[Localize(Concatenate('material_', Scope.GetFlagName))]" }
									}
								}
							}

							expand = {}
						}
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						spacing = 5
						
						hbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							background = {
								using = Background_Area
							}
							
							text_single = {
								text = "[GetModifier(Concatenate(GetPlayer.MakeScope.GetVariable('current_recipe').GetFlagName, '_modifier')).GetNameWithTooltip]"
								align = nobaseline
							}
						}

						expand = {}
						
						hbox = {
							layoutpolicy_vertical = expanding
							minimumsize = { 100 -1 }
							margin_right = 10
							
							tooltip = "alchemy_product_success_chance_tt"

							background = {
								using = Background_Area
							}

							icon = {
								name = "success_icon"
								size = { 30 30 }
								texture = "gfx/interface/icons/schemes/icon_scheme_success.dds"
							}

							text_single = {
								name = "success"
								minimumsize = { 30 0 }
								text = "alchemy_product_success_chance"
								using = Font_Size_Medium
								default_format = "#V"
								align = nobaseline
							}
						}
					}
					
					hbox = {
						layoutpolicy_horizontal = expanding
						
						hbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							
							background = {
								using = Background_Area
							}
							
							text_single = {
								text = "alchemy_product_amount"
								default_format = "#bold;V"
								align = center|nobaseline
							}
						}
						
						hbox = {
							minimumsize = { 100 -1 }
							button_plus = {
								datacontext = "[GetScriptedGui( 'product_amount_add' )]"
								enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							}
							button_minus = { 
								datacontext = "[GetScriptedGui( 'product_amount_subtract' )]"
								enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							}
							button_change = { 
								datacontext = "[GetScriptedGui( 'product_amount_reset' )]"
								onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							}
						}
					}
				}
			}
			
			button_primary_big = {
				name = "confirm_button"
				parentanchor = bottom|hcenter
				position = { 0 -10 }
				text = "CHARACTER_CREATOR_WINDOW_CHANGE"
				clicksound = "event:/SFX/UI/Unique/CharacterLifestyle/sfx_ui_unique_lifestyle_learning"
				
				datacontext = "[GetScriptedGui( 'alchemy_choose' )]"
				onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				tooltip = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			}
		}
	}
}

window = {
	name = "pod_smith_window"
	position = { 0 0 }
	parentanchor = center
	layer = middle
	datacontext = "[GetPlayer.MakeScope.GetCharacter]"

	using = Window_Background
	using = Window_Decoration_Spike
	allow_outside = yes

	state = {
		name = _show
		using = Animation_FadeIn_Standard
		using = Sound_WindowShow_Standard
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Standard
		using = Sound_WindowHide_Standard
	}

	visible = "[And(GetVariableSystem.HasValue('pod_craft_view', 'smith'),IsInGame)]"
	
	window_character_material = {}
	window_artifact_material = {}
	
	vbox = {
		set_parent_size_to_minimum = yes
		using = Window_Margins
		
		allow_outside = yes

		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "craft_smith"
			}

			blockoverride "button_close"
			{
				onclick = "[GetVariableSystem.Toggle('pod_craft_view')]"
				onclick = "[GetScriptedGui('craft_clear').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			}
		}

		widget = {
			size = { 650 625 }
			allow_outside = yes

			background = {
				texture = "gfx/interface/illustrations/event_scenes/study_physician.dds"
				fittype = centercrop
				alpha = 0.6
				margin_top = 10
				margin_left = 5
				margin_right = 5
				margin_bottom = 5
				modify_texture = {
					texture = "gfx/interface/component_masks/mask_edge_3px.dds"
					spriteType = Corneredtiled
					spriteborder = { 4 4 }
					blend_mode = alphamultiply
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
					blend_mode = alphamultiply
					mirror = vertical
				}
			}
		
			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				maximumsize = { 650 565 }
				spacing = 5
				
				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					maximumsize = { 295 565 }

					hbox = {
						layoutpolicy_horizontal = expanding
						spacer = {}
						text_label_center = {
							text = "FORGE_TAB_DESIGN"
						}
						hbox = {
							spacing = 6
							text_single = {
								margin_bottom = 5
								text = "CRAFT_RECIPE_TOGGLE"
								default_format = "#low"
							}
							button_checkbox = {
								size = { 20 20 }
								checked = "[Not(GetVariableSystem.Exists('show_unknown_crafts'))]"
								onclick = "[GetVariableSystem.Toggle('show_unknown_crafts')]"
							}
						}
					}
						
					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_margins" {
							margin = { 4 4 }
						}

						blockoverride "scrollbox_content"
						{
							vbox = {
								spacing = 5
								margin_top = 5
								datamodel = "[GetGlobalList('smith_list')]"
								ignoreinvisible = yes
								
								item = {
									button_alchemy_craft = {
										datacontext = "[GetScriptedGui('smith_set')]"
										blockoverride "title" { text = "[Localize(Concatenate(Scope.GetFlagName, '_button_name'))]" }
									}
								}
							}

							expand = {}
						}
					}
				}
				
				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					maximumsize = { 350 565 }

					text_label_center = {
						text = "ALCHEMY_TAB_INGREDIENT"
					}
						
					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_margins" {
							margin = { 4 4 }
						}

						blockoverride "scrollbox_content"
						{
									
							vbox = {	
								datamodel = "[GetPlayer.MakeScope.GetList('ingredient_list')]"
								ignoreinvisible = yes
									
								item = {
									container_ingredient = {
										blockoverride "title" { text = "[Localize(Concatenate('material_', Scope.GetFlagName))]" }
										blockoverride "amount" { text = "[Localize(Concatenate('material_amount_', Scope.GetFlagName))]" }
										blockoverride "cost" { text = "[Localize(Concatenate('material_total_cost_', Scope.GetFlagName))]" }
									}
								}
							}

							expand = {}
						}
					}

					text_label_center = {
						text = "ALCHEMY_TAB_ALT_INGREDIENT"
					}
						
					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_margins" {
							margin = { 4 4 }
						}

						blockoverride "scrollbox_content"
						{
									
							vbox = {	
								datamodel = "[GetPlayer.MakeScope.GetList('alt_ingredient_list')]"
								ignoreinvisible = yes
									
								item = {
									container_alt_ingredient = {
										blockoverride "title" { text = "[Localize(Concatenate('material_', Scope.GetFlagName))]" }
									}
								}
							}

							expand = {}
						}
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						spacing = 5
						
						hbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							background = {
								using = Background_Area
							}
							
							text_single = {
								visible = "[GetPlayer.MakeScope.Var('current_recipe').IsSet]"
								text = "current_forge_name"
								align = nobaseline
							}
						}

						expand = {}
						
						hbox = {
							layoutpolicy_vertical = expanding
							minimumsize = { 120 -1 }
							margin_right = 10
							
							tooltip = "smith_time_tt"

							background = {
								using = Background_Area
							}

							icon = {
								name = "success_icon"
								size = { 30 30 }
								texture = "gfx/interface/icons/schemes/icon_scheme_speed.dds"
							}

							text_single = {
								name = "time"
								minimumsize = { 30 0 }
								text = "smith_time"
								using = Font_Size_Medium
								default_format = "#V"
								align = nobaseline
							}
						}
					}
				}
			}
			
			button_primary_big = {
				parentanchor = bottom|hcenter
				position = { 0 -10 }
				text = "CHARACTER_CREATOR_WINDOW_CHANGE"
				clicksound = "event:/SFX/UI/Unique/CharacterLifestyle/sfx_ui_unique_lifestyle_learning"
				
				datacontext = "[GetScriptedGui( 'smith_choose' )]"
				onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				tooltip = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			}
		}
	}
}

window = {
	name = "pod_forge_window"
	position = { 0 0 }
	parentanchor = center
	layer = middle
	datacontext = "[GetPlayer.MakeScope.GetCharacter]"

	using = Window_Background
	using = Window_Decoration_Spike
	allow_outside = yes

	state = {
		name = _show
		using = Animation_FadeIn_Standard
		using = Sound_WindowShow_Standard
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Standard
		using = Sound_WindowHide_Standard
	}

	visible = "[And(GetVariableSystem.HasValue('pod_craft_view', 'forge'),IsInGame)]"
	
	window_character_material = {}
	window_artifact_material = {}
	
	vbox = {
		set_parent_size_to_minimum = yes
		using = Window_Margins
		
		allow_outside = yes

		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "craft_forge"
			}

			blockoverride "button_close"
			{
				onclick = "[GetVariableSystem.Toggle('pod_craft_view')]"
				onclick = "[GetScriptedGui('craft_clear').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			}
		}

		widget = {
			size = { 650 625 }
			allow_outside = yes

			background = {
				texture = "gfx/interface/illustrations/event_scenes/study_physician.dds"
				fittype = centercrop
				alpha = 0.6
				margin_top = 10
				margin_left = 5
				margin_right = 5
				margin_bottom = 5
				modify_texture = {
					texture = "gfx/interface/component_masks/mask_edge_3px.dds"
					spriteType = Corneredtiled
					spriteborder = { 4 4 }
					blend_mode = alphamultiply
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
					blend_mode = alphamultiply
					mirror = vertical
				}
			}
		
			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				maximumsize = { 650 565 }
				spacing = 5
				
				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					maximumsize = { 295 565 }

					hbox = {
						layoutpolicy_horizontal = expanding
						spacer = {}
						text_label_center = {
							text = "FORGE_TAB_DESIGN"
						}
						hbox = {
							spacing = 6
							text_single = {
								margin_bottom = 5
								text = "CRAFT_RECIPE_TOGGLE"
								default_format = "#low"
							}
							button_checkbox = {
								size = { 20 20 }
								checked = "[Not(GetVariableSystem.Exists('show_unknown_crafts'))]"
								onclick = "[GetVariableSystem.Toggle('show_unknown_crafts')]"
							}
						}
					}
						
					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_margins" {
							margin = { 4 4 }
						}

						blockoverride "scrollbox_content"
						{
							vbox = {
								spacing = 5
								margin_top = 5
								datamodel = "[GetGlobalList('forge_list')]"
								ignoreinvisible = yes
								
								item = {
									button_alchemy_craft = {
										datacontext = "[GetScriptedGui('forge_set')]"
										blockoverride "title" { text = "[Localize(Concatenate(Scope.GetFlagName, '_name'))]" }
									}
								}
							}

							expand = {}
						}
					}
				}
				
				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					maximumsize = { 350 565 }

					text_label_center = {
						text = "FORGE_TAB_MODIFIER"
					}
						
					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_margins" {
							margin = { 4 4 }
						}

						blockoverride "scrollbox_content"
						{
							text_label_left = {
								align = top
								layoutpolicy_vertical = expanding
								datacontext = "[GetScriptedGui( 'forge_display' )]"
								text = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								min_width = 350
								max_width = 350
								fontsize_min = 12
								multiline = yes
							}
						}
					}
						
					hbox = {
						layoutpolicy_horizontal = expanding
						datacontext = "[GetScriptedGui( 'artifact_piece_alt' )]"
						visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						
						button_change = {
							align = center|nobaseline
							tooltip = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						}
					}	

					hbox = {
						layoutpolicy_horizontal = expanding
						spacer = {}
						text_label_center = {
							text = "FORGE_TAB_METHOD"
						}
						hbox = {
							spacing = 6
							text_single = {
								margin_bottom = 5
								text = "CRAFT_RECIPE_TOGGLE"
								default_format = "#low"
							}
							button_checkbox = {
								size = { 20 20 }
								checked = "[Not(GetVariableSystem.Exists('show_unknown_crafts'))]"
								onclick = "[GetVariableSystem.Toggle('show_unknown_crafts')]"
							}
						}
					}
						
					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_margins" {
							margin = { 4 4 }
						}

						blockoverride "scrollbox_content"
						{
									
							vbox = {	
								datamodel = "[GetPlayer.MakeScope.GetList('method_list')]"
								ignoreinvisible = yes
									
								item = {
									container_method = {
										visible = "[And( GetScriptedGui('method_alt').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('method', MakeScopeFlag(Scope.GetFlagName)).End), Or( GetVariableSystem.Exists('show_unknown_crafts'), GetScriptedGui('method_alt').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('method', MakeScopeFlag(Scope.GetFlagName)).End) ) )]"
										blockoverride "title" { text = "[Localize(Concatenate(Scope.GetFlagName, '_method'))]" }
									}
								}
							}

							expand = {}
						}
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						spacing = 5
						
						hbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							background = {
								using = Background_Area
							}
							
							text_single = {
								visible = "[GetPlayer.MakeScope.Var('current_recipe').IsSet]"
								text = "current_forge_name"
								align = nobaseline
							}
						}

						expand = {}
						
						hbox = {
							layoutpolicy_vertical = expanding
							minimumsize = { 120 -1 }
							margin_right = 10
							
							tooltip = "forge_time_tt"

							background = {
								using = Background_Area
							}

							icon = {
								name = "success_icon"
								size = { 30 30 }
								texture = "gfx/interface/icons/schemes/icon_scheme_speed.dds"
							}

							text_single = {
								name = "time"
								minimumsize = { 30 0 }
								text = "forge_time"
								using = Font_Size_Medium
								default_format = "#V"
								align = nobaseline
							}
						}
					}
				}
			}
			
			button_primary_big = {
				parentanchor = bottom|hcenter
				position = { 0 -10 }
				text = "CHARACTER_CREATOR_WINDOW_CHANGE"
				clicksound = "event:/SFX/UI/Unique/CharacterLifestyle/sfx_ui_unique_lifestyle_learning"
				
				datacontext = "[GetScriptedGui( 'forge_choose' )]"
				onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				tooltip = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			}
		}
	}
}

window = {
	name = "pod_enhance_window"
	position = { 0 0 }
	parentanchor = center
	layer = middle
	datacontext = "[GetPlayer.MakeScope.GetCharacter]"

	using = Window_Background
	using = Window_Decoration_Spike
	allow_outside = yes

	state = {
		name = _show
		using = Animation_FadeIn_Standard
		using = Sound_WindowShow_Standard
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Standard
		using = Sound_WindowHide_Standard
	}

	visible = "[And(GetVariableSystem.HasValue('pod_craft_view', 'enhance'),IsInGame)]"
	
	window_character_material = {
		blockoverride "position"
		{
			position = { 735 560 }
		}
	}
	window_artifact_material = {
		blockoverride "position"
		{
			position = { 735 560 }
		}
	}
	window_target_artifact = {}
	
	vbox = {
		set_parent_size_to_minimum = yes
		using = Window_Margins
		
		allow_outside = yes

		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "craft_enhance"
			}

			blockoverride "button_close"
			{
				onclick = "[GetVariableSystem.Toggle('pod_craft_view')]"
				onclick = "[GetScriptedGui('craft_clear').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			}
		}

		widget = {
			size = { 700 625 }
			allow_outside = yes

			background = {
				texture = "gfx/interface/illustrations/event_scenes/study_physician.dds"
				fittype = centercrop
				alpha = 0.6
				margin_top = 10
				margin_left = 5
				margin_right = 5
				margin_bottom = 5
				modify_texture = {
					texture = "gfx/interface/component_masks/mask_edge_3px.dds"
					spriteType = Corneredtiled
					spriteborder = { 4 4 }
					blend_mode = alphamultiply
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
					blend_mode = alphamultiply
					mirror = vertical
				}
			}
		
			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				maximumsize = { 700 565 }
				spacing = 5
				
				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					maximumsize = { 350 565 }

					text_label_center = {
						text = "ALCHEMY_TAB_INGREDIENT"
					}
						
					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_margins" {
							margin = { 4 4 }
						}

						blockoverride "scrollbox_content"
						{
									
							vbox = {	
								datamodel = "[GetPlayer.MakeScope.GetList('ingredient_list')]"
								ignoreinvisible = yes
									
								item = {
									container_ingredient = {
										blockoverride "title" { text = "[Localize(Concatenate('material_', Scope.GetFlagName))]" }
										blockoverride "amount" { text = "[Localize(Concatenate('material_amount_', Scope.GetFlagName))]" }
										blockoverride "cost" { text = "[Localize(Concatenate('material_total_cost_', Scope.GetFlagName))]" }
									}
								}
							}

							expand = {}
						}
					}

					text_label_center = {
						text = "ALCHEMY_TAB_ALT_INGREDIENT"
					}
						
					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_margins" {
							margin = { 4 4 }
						}

						blockoverride "scrollbox_content"
						{
									
							vbox = {	
								datamodel = "[GetPlayer.MakeScope.GetList('alt_ingredient_list')]"
								ignoreinvisible = yes
									
								item = {
									container_alt_ingredient = {
										blockoverride "title" { text = "[Localize(Concatenate('material_', Scope.GetFlagName))]" }
									}
								}
							}

							expand = {}
						}
					}
				}
			
				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					maximumsize = { 350 565 }

					text_label_center = {
						text = "FORGE_TAB_MODIFIER"
					}
						
					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_margins" {
							margin = { 4 4 }
						}

						blockoverride "scrollbox_content"
						{
							text_label_left = {
								align = top
								layoutpolicy_vertical = expanding
								datacontext = "[GetScriptedGui( 'enhance_display' )]"
								text = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								min_width = 350
								max_width = 350
								fontsize_min = 12
								multiline = yes
							}
						}
					}
						
					hbox = {
						layoutpolicy_horizontal = expanding
						datacontext = "[GetScriptedGui( 'artifact_piece_alt' )]"
						visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						
						button_change = {
							align = center|nobaseline
							tooltip = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						}
					}	

					hbox = {
						layoutpolicy_horizontal = expanding
						spacer = {}
						text_label_center = {
							text = "FORGE_TAB_METHOD"
						}
						hbox = {
							spacing = 6
							text_single = {
								margin_bottom = 5
								text = "CRAFT_RECIPE_TOGGLE"
								default_format = "#low"
							}
							button_checkbox = {
								size = { 20 20 }
								checked = "[Not(GetVariableSystem.Exists('show_unknown_crafts'))]"
								onclick = "[GetVariableSystem.Toggle('show_unknown_crafts')]"
							}
						}
					}
						
					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_margins" {
							margin = { 4 4 }
						}

						blockoverride "scrollbox_content"
						{
									
							vbox = {	
								datamodel = "[GetGlobalList('enhance_list')]"
								ignoreinvisible = yes
									
								item = {
									container_recipe = {
										blockoverride "title" { text = "[Localize(Concatenate(Scope.GetFlagName, '_name'))]" }
										datacontext = "[GetScriptedGui( 'enhance_recipe_alt' )]"
									}
								}
							}

							expand = {}
						}
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						spacing = 5
						
						hbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							background = {
								using = Background_Area
							}
							
							text_single = {
								visible = "[GetPlayer.MakeScope.Var('current_recipe').IsSet]"
								text = "current_forge_name"
								align = nobaseline
							}
						}

						expand = {}
						
						hbox = {
							layoutpolicy_vertical = expanding
							minimumsize = { 120 -1 }
							margin_right = 10
							
							tooltip = "enhance_success_chance_tt"

							background = {
								using = Background_Area
							}

							icon = {
								name = "success_icon"
								size = { 30 30 }
								texture = "gfx/interface/icons/schemes/icon_scheme_success.dds"
							}

							text_single = {
								name = "success"
								minimumsize = { 30 0 }
								text = "enhance_success_chance"
								using = Font_Size_Medium
								default_format = "#V"
								align = nobaseline
							}
						}
					}
				}
			}
			
			button_primary_big = {
				parentanchor = bottom|hcenter
				position = { 0 -10 }
				text = "CHARACTER_CREATOR_WINDOW_CHANGE"
				clicksound = "event:/SFX/UI/Unique/CharacterLifestyle/sfx_ui_unique_lifestyle_learning"
				
				datacontext = "[GetScriptedGui( 'enhance_choose' )]"
				onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				tooltip = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			}
		}
	}
}

window = {
	name = "pod_automaton_window"
	position = { 0 0 }
	parentanchor = center
	layer = middle
	datacontext = "[GetPlayer.MakeScope.GetCharacter]"

	using = Window_Background
	using = Window_Decoration_Spike
	allow_outside = yes

	state = {
		name = _show
		using = Animation_FadeIn_Standard
		using = Sound_WindowShow_Standard
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Standard
		using = Sound_WindowHide_Standard
	}

	visible = "[And(GetVariableSystem.HasValue('pod_craft_view', 'automaton'),IsInGame)]"
	
	vbox = {
		set_parent_size_to_minimum = yes
		using = Window_Margins
		
		allow_outside = yes

		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "craft_automaton"
			}

			blockoverride "button_close"
			{
				onclick = "[GetVariableSystem.Toggle('pod_craft_view')]"
				onclick = "[GetScriptedGui('craft_clear').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			}
		}

		widget = {
			size = { 700 625 }
			allow_outside = yes

			background = {
				texture = "gfx/interface/illustrations/event_scenes/study_physician.dds"
				fittype = centercrop
				alpha = 0.6
				margin_top = 10
				margin_left = 5
				margin_right = 5
				margin_bottom = 5
				modify_texture = {
					texture = "gfx/interface/component_masks/mask_edge_3px.dds"
					spriteType = Corneredtiled
					spriteborder = { 4 4 }
					blend_mode = alphamultiply
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
					blend_mode = alphamultiply
					mirror = vertical
				}
			}
		
			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				maximumsize = { 700 565 }
				spacing = 5
				
				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					maximumsize = { 350 565 }

					text_label_center = {
						text = "ALCHEMY_TAB_INGREDIENT"
					}
						
					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_margins" {
							margin = { 4 4 }
						}

						blockoverride "scrollbox_content"
						{
									
							vbox = {	
								datamodel = "[GetPlayer.MakeScope.GetList('ingredient_list')]"
								ignoreinvisible = yes
									
								item = {
									container_ingredient = {
										blockoverride "title" { text = "[Localize(Concatenate('material_', Scope.GetFlagName))]" }
										blockoverride "amount" { text = "[Localize(Concatenate('material_amount_', Scope.GetFlagName))]" }
										blockoverride "cost" { text = "[Localize(Concatenate('material_total_cost_', Scope.GetFlagName))]" }
									}
								}
							}

							expand = {}
						}
					}

					text_label_center = {
						text = "ALCHEMY_TAB_ALT_INGREDIENT"
					}
						
					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_margins" {
							margin = { 4 4 }
						}

						blockoverride "scrollbox_content"
						{
									
							vbox = {	
								datamodel = "[GetPlayer.MakeScope.GetList('alt_ingredient_list')]"
								ignoreinvisible = yes
									
								item = {
									container_alt_ingredient = {
										blockoverride "title" { text = "[Localize(Concatenate('material_', Scope.GetFlagName))]" }
									}
								}
							}

							expand = {}
						}
					}
				}
			
				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					maximumsize = { 350 565 }

					text_label_center = {
						text = "AUTOMATON_TAB_SKILL"
					}
						
					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_margins" {
							margin = { 4 4 }
						}

						blockoverride "scrollbox_content"
						{
							text_label_left = {
								align = top
								layoutpolicy_vertical = expanding
								datacontext = "[GetScriptedGui( 'automaton_display' )]"
								text = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								min_width = 350
								max_width = 350
								fontsize_min = 12
								multiline = yes
							}
						}
					}

					text_label_center = {
						text = "FORGE_TAB_METHOD"
					}
						
					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_margins" {
							margin = { 4 4 }
						}

						blockoverride "scrollbox_content"
						{
									
							vbox = {	
								datamodel = "[GetGlobalList('automaton_list')]"
								ignoreinvisible = yes
									
								item = {
									container_recipe = {
										blockoverride "title" { text = "[Localize(Concatenate(Scope.GetFlagName, '_name'))]" }
										datacontext = "[GetScriptedGui( 'automaton_recipe_alt' )]"
									}
								}
							}

							expand = {}
						}
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						spacing = 5
						
						hbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							background = {
								using = Background_Area
							}
							
							text_single = {
								visible = "[GetPlayer.MakeScope.Var('current_recipe').IsSet]"
								text = "current_forge_name"
								align = nobaseline
							}
						}

						expand = {}
						
						hbox = {
							layoutpolicy_vertical = expanding
							minimumsize = { 120 -1 }
							margin_right = 10
							
							tooltip = "automaton_quality_tt"

							background = {
								using = Background_Area
							}

							icon = {
								name = "success_icon"
								size = { 30 30 }
								texture = "gfx/interface/icons/legend_hud.dds"
							}

							text_single = {
								name = "success"
								minimumsize = { 30 0 }
								text = "automaton_quality"
								using = Font_Size_Medium
								default_format = "#V"
								align = nobaseline
							}
						}
					}
				}
			}
			
			button_primary_big = {
				parentanchor = bottom|hcenter
				position = { 0 -10 }
				text = "CHARACTER_CREATOR_WINDOW_CHANGE"
				clicksound = "event:/SFX/UI/Unique/CharacterLifestyle/sfx_ui_unique_lifestyle_learning"
				
				datacontext = "[GetScriptedGui( 'automaton_choose' )]"
				onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				tooltip = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				
				onclick = "[GetVariableSystem.Toggle('pod_craft_view')]"
				onclick = "[GetScriptedGui('craft_clear').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			}
		}
	}
}
