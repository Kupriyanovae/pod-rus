window = {
	name = "trait_change_window"
	size = { 1076 850 }
	position = { 610 100 }
	layer = middle

	visible = "[And(Or(Not(IsObserver), GetPlayer.IsValid), GetPlayer.MakeScope.GetVariable('reweaving_recipient').IsSet)]"
	datacontext = "[GetPlayer.MakeScope.GetVariable('reweaving_recipient').GetCharacter]"

	using = Window_Background
	using = Window_Decoration
	using = Animation_ShowHide_Standard

	state = {
		name = _show
		using = Animation_FadeIn_Quick

		on_start = "[GetVariableSystem.Set('trait_tab_choice','physical')]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
	}
	
	state = {
		name = _pause

		trigger_when = "[Not(IsGamePaused)]"
		on_start = "[OnPause]"
	}
	
	vbox = {
		using = Window_Margins
		restrictparent_min = yes

		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "TRAIT_CHANGE_WINDOW_TITLE"
			}

			blockoverride "button_close"
			{
				onclick = "[GetScriptedGui('trait_change_window_open').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
				onclick = "[GetVariableSystem.Clear('trait_tab_choice')]"
			}
		}

		vbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
		
			vbox = {
				name = "trait_selection"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				minimumsize = { 0 512 }
				margin = { 14 14 }

				background = {
					using = Background_Area
				}

				expand = {}
					
				hbox = {
					layoutpolicy_horizontal = expanding
					button_tab = {
						text = "TRAIT_CHANGE_WINDOW_TAB_PERSONALITY"
						layoutpolicy_horizontal = expanding
						onclick = "[GetVariableSystem.Set('trait_tab_choice','personality')]"
						down = "[GetVariableSystem.HasValue('trait_tab_choice', 'personality')]"
						visible = "[GetScriptedGui('personality_trait_change').IsShown(GuiScope.SetRoot( Character.MakeScope ).End)]"
					}
					button_tab = {
						text = "TRAIT_CHANGE_WINDOW_TAB_EDUCATION"
						layoutpolicy_horizontal = expanding
						onclick = "[GetVariableSystem.Set('trait_tab_choice','education')]"
						down = "[GetVariableSystem.HasValue('trait_tab_choice', 'education')]"
						visible = "[GetScriptedGui('education_trait_change').IsShown(GuiScope.SetRoot( Character.MakeScope ).End)]"
					}
					button_tab = {
						text = "TRAIT_CHANGE_WINDOW_TAB_COMMANDER"
						layoutpolicy_horizontal = expanding
						onclick = "[GetVariableSystem.Set('trait_tab_choice','commander')]"
						down = "[GetVariableSystem.HasValue('trait_tab_choice', 'commander')]"
						visible = "[GetScriptedGui('commander_trait_change').IsShown(GuiScope.SetRoot( Character.MakeScope ).End)]"
					}
					button_tab = {
						text = "TRAIT_CHANGE_WINDOW_TAB_LIFESTYLE"
						layoutpolicy_horizontal = expanding
						onclick = "[GetVariableSystem.Set('trait_tab_choice','lifestyle')]"
						down = "[GetVariableSystem.HasValue('trait_tab_choice', 'lifestyle')]"
						visible = "[GetScriptedGui('lifestyle_trait_change').IsShown(GuiScope.SetRoot( Character.MakeScope ).End)]"
					}
					button_tab = {
						text = "TRAIT_CHANGE_WINDOW_TAB_FAME"
						layoutpolicy_horizontal = expanding
						onclick = "[GetVariableSystem.Set('trait_tab_choice','fame')]"
						down = "[GetVariableSystem.HasValue('trait_tab_choice', 'fame')]"
						visible = "[GetScriptedGui('fame_trait_change').IsShown(GuiScope.SetRoot( Character.MakeScope ).End)]"
					}
					button_tab = {
						text = "TRAIT_CHANGE_WINDOW_TAB_STRESS"
						layoutpolicy_horizontal = expanding
						onclick = "[GetVariableSystem.Set('trait_tab_choice','stress')]"
						down = "[GetVariableSystem.HasValue('trait_tab_choice', 'stress')]"
						visible = "[GetScriptedGui('stress_trait_change').IsShown(GuiScope.SetRoot( Character.MakeScope ).End)]"
					}
					button_tab = {
						text = "TRAIT_CHANGE_WINDOW_TAB_HEALTH"
						layoutpolicy_horizontal = expanding
						onclick = "[GetVariableSystem.Set('trait_tab_choice','health')]"
						down = "[GetVariableSystem.HasValue('trait_tab_choice', 'health')]"
						visible = "[GetScriptedGui('health_trait_change').IsShown(GuiScope.SetRoot( Character.MakeScope ).End)]"
					}
					button_tab = {
						text = "TRAIT_CHANGE_WINDOW_TAB_PHYSICAL"
						layoutpolicy_horizontal = expanding
						onclick = "[GetVariableSystem.Set('trait_tab_choice','physical')]"
						down = "[GetVariableSystem.HasValue('trait_tab_choice', 'physical')]"
						visible = "[GetScriptedGui('physical_trait_change').IsShown(GuiScope.SetRoot( Character.MakeScope ).End)]"
					}
				}

				scrollbox = {
					name = "characters_scroll_area"
					layoutpolicy_vertical = expanding
					layoutpolicy_horizontal = expanding

					blockoverride "scrollbox_content" {
						text_label_center = {
							text = "TRAIT_CHANGE_WINDOW_CHOOSE_NEW"
						}
						
						vbox = {
							name = "personality_traits_selection"
							visible = "[GetVariableSystem.HasValue('trait_tab_choice', 'personality')]"
							margin = { 8 8 }
							
							grid_change_trait = {
								datamodel = "[GetPersonalityTraits]"
								datacontext = "[GetScriptedGui( 'trait_change_personality_select' )]"
							}
						}
						
						vbox = {
							name = "education_traits_selection"
							visible = "[GetVariableSystem.HasValue('trait_tab_choice', 'education')]"
							margin = { 8 8 }
							
							grid_change_trait = {
								datamodel = "[GetEducationTraits]"
								datacontext = "[GetScriptedGui( 'trait_change_education_select' )]"
							}
						}
						
						vbox = {
							name = "commander_traits_selection"
							visible = "[GetVariableSystem.HasValue('trait_tab_choice', 'commander')]"
							margin = { 8 8 }
							
							grid_change_trait = {
								datamodel = "[GetTraitsWithFlag( 'reweaving_commander_trait' )]"
								datacontext = "[GetScriptedGui( 'trait_change_commander_select' )]"
							}
						}
						
						vbox = {
							name = "lifestyle_traits_selection"
							visible = "[GetVariableSystem.HasValue('trait_tab_choice', 'lifestyle')]"
							margin = { 8 8 }
							
							grid_change_trait = {
								datamodel = "[GetTraitsWithFlag( 'reweaving_lifestyle_trait' )]"
								datacontext = "[GetScriptedGui( 'trait_change_lifestyle_select' )]"
							}
						}
						
						vbox = {
							name = "fame_traits_selection"
							visible = "[GetVariableSystem.HasValue('trait_tab_choice', 'fame')]"
							margin = { 8 8 }
							
							grid_change_trait = {
								datamodel = "[GetTraitsWithFlag( 'reweaving_fame_trait' )]"
								datacontext = "[GetScriptedGui( 'trait_change_fame_select' )]"
							}
						}
						
						vbox = {
							name = "stress_traits_selection"
							visible = "[GetVariableSystem.HasValue('trait_tab_choice', 'stress')]"
							margin = { 8 8 }
							
							grid_change_trait = {
								datamodel = "[GetTraitsWithFlag( 'reweaving_stress_trait' )]"
								datacontext = "[GetScriptedGui( 'trait_change_stress_select' )]"
							}
						}
						
						vbox = {
							name = "health_traits_selection"
							visible = "[GetVariableSystem.HasValue('trait_tab_choice', 'health')]"
							margin = { 8 8 }
							
							grid_change_trait = {
								datamodel = "[GetTraitsWithFlag( 'reweaving_health_trait' )]"
								datacontext = "[GetScriptedGui( 'trait_change_health_select' )]"
							}
						}
						
						vbox = {
							name = "physical_traits_selection"
							visible = "[GetVariableSystem.HasValue('trait_tab_choice', 'physical')]"
							margin = { 8 8 }
							
							grid_change_trait = {
								datamodel = "[GetTraitsWithFlag( 'reweaving_physical_trait' )]"
								datacontext = "[GetScriptedGui( 'trait_change_physical_select' )]"
							}
						}
					}
				}
				expand = {}
			}

			vbox = {
				name = "footer"
				layoutpolicy_horizontal = expanding
				spacing = 10
				margin_bottom = 12

				text_single = {
					text = "TRAIT_CHANGE_WINDOW_ENACT_COST"
					datacontext = "[GuiScope.SetRoot( Character.MakeScope ).GetScriptValueBreakdown( 'POD_trait_change_value' )]"

					tooltipwidget = {
						widget_value_breakdown_tooltip = {}
					}
					using = Font_Size_Medium
				}

				hbox = {
					name = "control_buttons"
					spacing = 20

					button_standard = {
						name = "close_button"
						datacontext = "[GetScriptedGui( 'cancel_trait_change' )]"
						onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(Character.MakeScope).AddScope('player', GetPlayer.MakeScope).End)]"
						onclick = "[GetVariableSystem.Clear('trait_tab_choice')]"
						onclick = "[GetScriptedGui('trait_change_window_open').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('player', GetPlayer.MakeScope).End)]"
						text = "CANCEL"
						using = tooltip_above
					}

					button_primary = {
						name = "enact_button"
						datacontext = "[GetScriptedGui( 'apply_trait_change' )]"
						enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(Character.MakeScope).AddScope('player', GetPlayer.MakeScope).End)]"
						onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(Character.MakeScope).AddScope('player', GetPlayer.MakeScope).End)]"
						onclick = "[GetVariableSystem.Clear('trait_tab_choice')]"
						onclick = "[GetScriptedGui('trait_change_window_open').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"

						text = "TRAIT_CHANGE_WINDOW_CHANGE"

						using = tooltip_above
						tooltip = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot(Character.MakeScope).AddScope('player', GetPlayer.MakeScope).End)]"
					}
				}
			}
		}
	}
}

types TraitChangeWindowTypes
{
    type grid_change_trait = dynamicgridbox
	{	
		flipdirection = yes
        ignoreinvisible = yes
        maxhorizontalslots = 4
		datamodel_wrap = 4
			
		item = {
			button_standard_hover = {
				name = "trait_item"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				size = { 220 55 }
				enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(Character.MakeScope).AddScope('trait', Trait.MakeScope).AddScope('player', GetPlayer.MakeScope).End)]"
				onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(Character.MakeScope).AddScope('trait', Trait.MakeScope).AddScope('player', GetPlayer.MakeScope).End)]"
				tooltip = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot(Character.MakeScope).AddScope('trait', Trait.MakeScope).AddScope('player', GetPlayer.MakeScope).End)]"

				hbox = {
					margin = { 5 0 }
					margin_right = 10
					spacing = 10

					icon_trait = {
					}

					text_single = {
						layoutpolicy_horizontal = expanding
						text = "[Trait.GetNameNoTooltip( Character.Self )]"
						default_format = "#clickable"
					}
				}

				button_active_marker = {
					name = "victory_glow"
					visible = "[Character.HasTraitByKey( Trait.GetKey )]"
				}

				icon = {
					name = "victory_glow2"
					visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(Character.MakeScope).AddScope('trait', Trait.MakeScope).AddScope('player', GetPlayer.MakeScope).End)]"
					size = { 100% 100% }
					texture = "gfx/interface/component_masks/mask_fade_circle.dds"
					using = Color_Orange
					alpha = 0.4
				}

				icon = {
					name = "X_not_available"
					visible = "[And( Character.HasTraitByKey( Trait.GetKey ), ScriptedGui.IsShown(GuiScope.SetRoot(Character.MakeScope).AddScope('trait', Trait.MakeScope).AddScope('player', GetPlayer.MakeScope).End) )]"
					size = { 30 30 }
					parentanchor = bottom|right
					texture = "gfx/interface/icons/symbols/icon_cross.dds"
				}
			}
		}
	}
}